@ifxml
@ifnotxml
@c
@c For the copyright information for this file, please search up the
@c directory tree for the first COPYING file.
@c
@end ifnotxml
@end ifxml
@node Status Code Reference
@chapter Status Code Reference

@noindent
This section lists the status codes and their conventional meanings@.
The list follows@.

@table @asis
@idindex @w{@t{SST_SUCCESS}}
@item 0 = @w{@t{SST_SUCCESS}}
@include ipez.texi
The
@w{@t{SST_SUCCESS}}
status code is returned when a function succeeds@.

@idindex @w{@t{SST_UNKNOWN}}
@item 1 = @w{@t{SST_UNKNOWN}}
@include ipez.texi
The
@w{@t{SST_UNKNOWN}}
status code is returned by the
@w{@t{sst_status_name}}
and
@w{@t{sst_status_value}}
functions when they are given invalid arguments@.

@idindex @w{@t{SST_FAILURE}}
@item 2 = @w{@t{SST_FAILURE}}
@include ipez.texi
The
@w{@t{SST_FAILURE}}
status code is returned when a function fails@.

@idindex @w{@t{SST_INVALID_ARGUMENT}}
@item 3 = @w{@t{SST_INVALID_ARGUMENT}}
@include ipez.texi
The
@w{@t{SST_INVALID_ARGUMENT}}
status code is returned when a function is called incorrectly@.
The notion of arguments includes all objects accessed by the function
regardless of whether they are accessed through the formal arguments@.
The notion of arguments may also include values that are computed from
other arguments@.
For example, an array of pointers that is terminated with a null pointer
may be considered to introduce a computed argument that specifies the
number of elements in the array@.

@idindex @w{@t{SST_INVALID_OPERATION}}
@item 4 = @w{@t{SST_INVALID_OPERATION}}
@include ipez.texi
The
@w{@t{SST_INVALID_OPERATION}}
status code is returned when a function is called incorrectly and the
call could be more correct if an informal argument had a different
value@.

@idindex @w{@t{SST_NOT_IMPLEMENTED}}
@item 5 = @w{@t{SST_NOT_IMPLEMENTED}}
@include ipez.texi
The
@w{@t{SST_NOT_IMPLEMENTED}}
status code is returned when part of a function is not yet implemented@.

@idindex @w{@t{SST_NOT_SUPPORTED}}
@item 6 = @w{@t{SST_NOT_SUPPORTED}}
@include ipez.texi
The
@w{@t{SST_NOT_SUPPORTED}}
status code is returned when part of a function is not supported because
of system limitations or package configuration options@.

@idindex @w{@t{SST_OUT_OF_MEMORY}}
@item 7 = @w{@t{SST_OUT_OF_MEMORY}}
@include ipez.texi
The
@w{@t{SST_OUT_OF_MEMORY}}
status code is returned when a memory allocation fails@.

@idindex @w{@t{SST_WILD_POINTER}}
@item 8 = @w{@t{SST_WILD_POINTER}}
@include ipez.texi
The
@w{@t{SST_WILD_POINTER}}
status code is returned when a nonnull pointer argument does not appear
to be pointing to an object of an appropriate type@.

@idindex @w{@t{SST_NULL_POINTER}}
@item 9 = @w{@t{SST_NULL_POINTER}}
@include ipez.texi
The
@w{@t{SST_NULL_POINTER}}
status code is returned when a function is called incorrectly and the
call could be more correct if a null pointer argument had a different
value@.

@idindex @w{@t{SST_INTERNAL_ERROR}}
@item 10 = @w{@t{SST_INTERNAL_ERROR}}
@include ipez.texi
The
@w{@t{SST_INTERNAL_ERROR}}
status code is returned when a function detects a bug@.

@idindex @w{@t{SST_MISSING_CASE}}
@item 11 = @w{@t{SST_MISSING_CASE}}
@include ipez.texi
The
@w{@t{SST_MISSING_CASE}}
status code is returned when a function detects a missing case in a
switch statement or any similar construction@.

@idindex @w{@t{SST_INVALID_ALIASING}}
@item 12 = @w{@t{SST_INVALID_ALIASING}}
@include ipez.texi
The
@w{@t{SST_INVALID_ALIASING}}
status code is returned when a function is called incorrectly and the
call could be more correct if a nonnull pointer argument whose pointed
object incorrectly overlaps or incorrectly does not overlap another
argument had a different value@.

@idindex @w{@t{SST_OUT_OF_RANGE}}
@item 13 = @w{@t{SST_OUT_OF_RANGE}}
@include ipez.texi
The
@w{@t{SST_OUT_OF_RANGE}}
status code is returned when an integer output value is too large in
magnitude for the output type@.

@idindex @w{@t{SST_INVALID_POINTER}}
@item 14 = @w{@t{SST_INVALID_POINTER}}
@include ipez.texi
The
@w{@t{SST_INVALID_POINTER}}
status code is returned when a function is called incorrectly and the
call could be more correct if a pointer argument had a different value@.

@idindex @w{@t{SST_NONNULL_POINTER}}
@item 15 = @w{@t{SST_NONNULL_POINTER}}
@include ipez.texi
The
@w{@t{SST_NONNULL_POINTER}}
status code is returned when a function is called incorrectly and the
call could be more correct if a nonnull pointer argument had a different
value@.

@idindex @w{@t{SST_INTEGER_OVERFLOW}}
@item 16 = @w{@t{SST_INTEGER_OVERFLOW}}
@include ipez.texi
The
@w{@t{SST_INTEGER_OVERFLOW}}
status code is returned when a function fails because an integer value
was too large in magnitude@.

@idindex @w{@t{SST_INVALID_ARRAY_SIZE}}
@item 17 = @w{@t{SST_INVALID_ARRAY_SIZE}}
@include ipez.texi
The
@w{@t{SST_INVALID_ARRAY_SIZE}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that specifies the number of
elements in an array had a different value@.

@idindex @w{@t{SST_INVALID_LIST_SIZE}}
@item 18 = @w{@t{SST_INVALID_LIST_SIZE}}
@include ipez.texi
The
@w{@t{SST_INVALID_LIST_SIZE}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that specifies the number of
elements in an ordered collection had a different value@.

@idindex @w{@t{SST_INVALID_LIST_INDEX}}
@item 19 = @w{@t{SST_INVALID_LIST_INDEX}}
@include ipez.texi
The
@w{@t{SST_INVALID_LIST_INDEX}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that indexes an ordered
collection had a different value@.

@idindex @w{@t{SST_INVALID_ARRAY_INDEX}}
@item 20 = @w{@t{SST_INVALID_ARRAY_INDEX}}
@include ipez.texi
The
@w{@t{SST_INVALID_ARRAY_INDEX}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that indexes an array had a
different value@.

@idindex @w{@t{SST_NEGATIVE_LIST_SIZE}}
@item 21 = @w{@t{SST_NEGATIVE_LIST_SIZE}}
@include ipez.texi
The
@w{@t{SST_NEGATIVE_LIST_SIZE}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that specifies the number of
elements in an ordered collection were not negative@.

@idindex @w{@t{SST_ZERO_LIST_SIZE}}
@item 22 = @w{@t{SST_ZERO_LIST_SIZE}}
@include ipez.texi
The
@w{@t{SST_ZERO_LIST_SIZE}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that specifies the number of
elements in an ordered collection were not zero@.

@idindex @w{@t{SST_NEGATIVE_ARRAY_SIZE}}
@item 23 = @w{@t{SST_NEGATIVE_ARRAY_SIZE}}
@include ipez.texi
The
@w{@t{SST_NEGATIVE_ARRAY_SIZE}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that specifies the number of
elements in an array were not negative@.

@idindex @w{@t{SST_ZERO_ARRAY_SIZE}}
@item 24 = @w{@t{SST_ZERO_ARRAY_SIZE}}
@include ipez.texi
The
@w{@t{SST_ZERO_ARRAY_SIZE}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that specifies the number of
elements in an array were not zero@.

@idindex @w{@t{SST_NEGATIVE_LIST_INDEX}}
@item 25 = @w{@t{SST_NEGATIVE_LIST_INDEX}}
@include ipez.texi
The
@w{@t{SST_NEGATIVE_LIST_INDEX}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that indexes an ordered
collection were not negative@.

@idindex @w{@t{SST_NEGATIVE_ARRAY_INDEX}}
@item 26 = @w{@t{SST_NEGATIVE_ARRAY_INDEX}}
@include ipez.texi
The
@w{@t{SST_NEGATIVE_ARRAY_INDEX}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that indexes an array were not
negative@.

@idindex @w{@t{SST_OVERSIZE_LIST_INDEX}}
@item 27 = @w{@t{SST_OVERSIZE_LIST_INDEX}}
@include ipez.texi
The
@w{@t{SST_OVERSIZE_LIST_INDEX}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that indexes an ordered
collection were smaller in magnitude@.

@idindex @w{@t{SST_OVERSIZE_ARRAY_INDEX}}
@item 28 = @w{@t{SST_OVERSIZE_ARRAY_INDEX}}
@include ipez.texi
The
@w{@t{SST_OVERSIZE_ARRAY_INDEX}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that indexes an array were
smaller in magnitude@.

@idindex @w{@t{SST_MISSING_LIST_SENTINEL}}
@item 29 = @w{@t{SST_MISSING_LIST_SENTINEL}}
@include ipez.texi
The
@w{@t{SST_MISSING_LIST_SENTINEL}}
status code is returned when a function is called incorrectly and the
call could be more correct if an ordered collection argument contained a
sentinel value@.

@idindex @w{@t{SST_MISSING_ARRAY_SENTINEL}}
@item 30 = @w{@t{SST_MISSING_ARRAY_SENTINEL}}
@include ipez.texi
The
@w{@t{SST_MISSING_ARRAY_SENTINEL}}
status code is returned when a function is called incorrectly and the
call could be more correct if an array argument contained a sentinel
value@.

@idindex @w{@t{SST_ZERO_LIST_INDEX}}
@item 31 = @w{@t{SST_ZERO_LIST_INDEX}}
@include ipez.texi
The
@w{@t{SST_ZERO_LIST_INDEX}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that indexes an ordered
collection were not zero@.

@idindex @w{@t{SST_ZERO_ARRAY_INDEX}}
@item 32 = @w{@t{SST_ZERO_ARRAY_INDEX}}
@include ipez.texi
The
@w{@t{SST_ZERO_ARRAY_INDEX}}
status code is returned when a function is called incorrectly and the
call could be more correct if an argument that indexes an array were not
zero@.

@idindex @w{@t{SST_PARSE_FAILURE}}
@item 33 = @w{@t{SST_PARSE_FAILURE}}
@include ipez.texi
The
@w{@t{SST_PARSE_FAILURE}}
status code is returned when a parser is given invalid input@.

Note that this status code does not imply the
@w{@t{SST_INVALID_ARGUMENT}}
status code@.

@idindex @w{@t{SST_ALWAYS_FAILS}}
@item 34 = @w{@t{SST_ALWAYS_FAILS}}
@include ipez.texi
The
@w{@t{SST_ALWAYS_FAILS}}
status code is returned by functions that always fail@.

@idindex @w{@t{SST_LONGPTR_NOT_SUPPORTED}}
@item 35 = @w{@t{SST_LONGPTR_NOT_SUPPORTED}}
@include ipez.texi
The
@w{@t{SST_LONGPTR_NOT_SUPPORTED}}
status code is returned when a function is not supported because native
pointers cannot be represented by the
@w{@t{long}}
Java type@.

@idindex @w{@t{SST_INVALID_OPTION}}
@item 36 = @w{@t{SST_INVALID_OPTION}}
@include ipez.texi
The
@w{@t{SST_INVALID_OPTION}}
status code is returned when a
@w{@t{main}}-like
function is given an invalid command-line option@.

@idindex @w{@t{SST_INVALID_OPTION_NAME}}
@item 37 = @w{@t{SST_INVALID_OPTION_NAME}}
@include ipez.texi
The
@w{@t{SST_INVALID_OPTION_NAME}}
status code is returned when a
@w{@t{main}}-like
function is given a command-line option with an invalid name@.

@idindex @w{@t{SST_INVALID_OPTION_VALUE}}
@item 38 = @w{@t{SST_INVALID_OPTION_VALUE}}
@include ipez.texi
The
@w{@t{SST_INVALID_OPTION_VALUE}}
status code is returned when a
@w{@t{main}}-like
function is given a command-line option with an invalid value@.

@idindex @w{@t{SST_ALLOCATION_FAILED}}
@item 39 = @w{@t{SST_ALLOCATION_FAILED}}
@include ipez.texi
The
@w{@t{SST_ALLOCATION_FAILED}}
status code is returned when a memory allocation fails because the
underlying allocation request failed@.

@idindex @w{@t{SST_ALLOCATION_IMPOSSIBLE}}
@item 40 = @w{@t{SST_ALLOCATION_IMPOSSIBLE}}
@include ipez.texi
The
@w{@t{SST_ALLOCATION_IMPOSSIBLE}}
status code is returned when a memory allocation fails because the size
is too large to make the underlying allocation request@.

@idindex @w{@t{SST_MISSING_OPTION_VALUE}}
@item 41 = @w{@t{SST_MISSING_OPTION_VALUE}}
@include ipez.texi
The
@w{@t{SST_MISSING_OPTION_VALUE}}
status code is returned when a
@w{@t{main}}-like
function is given a command-line option that requires but is missing a
value@.

@idindex @w{@t{SST_LIMIT_EXCEEDED}}
@item 42 = @w{@t{SST_LIMIT_EXCEEDED}}
@include ipez.texi
The
@w{@t{SST_LIMIT_EXCEEDED}}
status code is returned when a function fails because an implementation
limit was exceeded@.

This status code is similar to the
@w{@t{SST_NOT_IMPLEMENTED}}
status code@.
The rule of thumb is that
@w{@t{SST_NOT_IMPLEMENTED}}
means that the unimplemented feature is planned to be implemented, while
@w{@t{SST_LIMIT_EXCEEDED}}
means that the feature is not necessarily planned to be implemented@.

@idindex @w{@t{SST_INVALID_OPERAND}}
@item 43 = @w{@t{SST_INVALID_OPERAND}}
@include ipez.texi
The
@w{@t{SST_INVALID_OPERAND}}
status code is returned when a
@w{@t{main}}-like
function is given an invalid command-line operand@.
@end table
