#! /bin/sh -
#
# For the copyright information for this file, please search up the
# directory tree for the first COPYING file.
#
# This script bootstraps into Bash. The shebang is only for portability.
# For more information, see the Bash library > Bootstrapping section of
# the SST manual.
#

#
# The following files are very similar:
#
#   src/bash/scripts/gitlab-ci/rpm-centos-7-x86-64-archivist
#   src/bash/scripts/gitlab-ci/rpm-rhel-7-x86-64-archivist
#
# You should keep these files in sync.
#

# Load the prelude.
case $0 in /*) x=$0 ;; *) x=./$0 ;; esac
x=`dirname "$x"` || exit $?
set -e || exit $?
. "$x"/../../preludes/gitlab-ci.bash

apt-get -qy update
apt-get -qy install \
  git \
  gnupg1 \
  rpm \
  sshpass \
;

GNUPGHOME=$PWD/gpg1_home
readonly GNUPGHOME
export GNUPGHOME

mkdir $GNUPGHOME
chmod 700 $GNUPGHOME

cat >$GNUPGHOME/gpg.conf <<EOF
batch
no-tty
passphrase-file /archivist.gpg-passphrase
EOF

chmod 400 $GNUPGHOME/gpg.conf

gpg1 --import /archivist.gpg-secret-key

cat >~/.rpmmacros <<EOF
%__gpg /usr/bin/gpg1
%_gpg_name Stealth Archivist <archivist@stealthsoftwareinc.com>
%_gpg_path $GNUPGHOME
EOF

rpmsign --addsign sst-*.*/rpm/rhel-7/*.rpm

sh build-aux/save-artifacts.sh \
  --copy-ssh-secret-key-file \
  --git-committer-email archivist@stealthsoftwareinc.com \
  --git-committer-name "Stealth Archivist" \
  --gpg-passphrase-file /archivist.gpg-passphrase \
  --gpg-secret-key-file /archivist.gpg-secret-key \
  --repository git@gitlab.stealthsoftwareinc.com:stealth/sst-artifacts.git \
  --ssh-passphrase-file /archivist.ssh-passphrase \
  --ssh-secret-key-file /archivist.ssh-secret-key \
  sst-*.*/rpm/rhel-7/*.rpm \
;
