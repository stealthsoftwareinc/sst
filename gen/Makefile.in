# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Some parts of this file are from the SST package.
#
# The following copyright notice is generally applicable:
#
#      Copyright (C) Stealth Software Technologies, Inc.
#
# The full copyright information depends on the distribution
# of the package. For more information, see the COPYING file.
# However, depending on the context in which you are viewing
# this file, the COPYING file may not be available.
#


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
noinst_PROGRAMS = bin/sst_status_map_generator$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../build-aux/gatbps.ac \
	$(top_srcdir)/bin/sst_status_map_generator.ac \
	$(top_srcdir)/include/src/sst_status_map.inc.ac \
	$(top_srcdir)/../include/src/sst_status_map.inc.ac \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(include_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_bin_sst_status_map_generator_OBJECTS = src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.$(OBJEXT) \
	src/bin_sst_status_map_generator-sst_status_map_generator.$(OBJEXT)
bin_sst_status_map_generator_OBJECTS =  \
	$(am_bin_sst_status_map_generator_OBJECTS)
bin_sst_status_map_generator_LDADD = $(LDADD)
bin_sst_status_map_generator_LINK = $(CCLD) \
	$(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) \
	$(bin_sst_status_map_generator_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/../build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Po \
	src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(bin_sst_status_map_generator_SOURCES)
DIST_SOURCES = $(bin_sst_status_map_generator_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"
HEADERS = $(include_HEADERS) $(nodist_include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir distdir-am dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/../build-aux/GATBPS_VPATH_SEARCH.am \
	$(srcdir)/../build-aux/gatbps.am \
	$(srcdir)/../include/src/sst_status_map.inc.am \
	$(srcdir)/Makefile.in \
	$(srcdir)/bin/sst_status_map_generator.am \
	$(srcdir)/build-src/top_targets.am \
	$(srcdir)/include/src/sst_status_map.inc.am \
	$(top_srcdir)/../build-aux/ar-lib \
	$(top_srcdir)/../build-aux/compile \
	$(top_srcdir)/../build-aux/depcomp \
	$(top_srcdir)/../build-aux/install-sh \
	$(top_srcdir)/../build-aux/missing ../build-aux/ar-lib \
	../build-aux/compile ../build-aux/depcomp \
	../build-aux/install-sh ../build-aux/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
# Exists only to be overridden by the user if desired.
AM_DISTCHECK_DVI_TARGET = dvi
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_LOWER_C_PREFIX = @PACKAGE_LOWER_C_PREFIX@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_NAME_LOWER_UNDERSCORE_SLUG = @PACKAGE_NAME_LOWER_UNDERSCORE_SLUG@
PACKAGE_NAME_UNDERSCORE_SLUG = @PACKAGE_NAME_UNDERSCORE_SLUG@
PACKAGE_NAME_UPPER_UNDERSCORE_SLUG = @PACKAGE_NAME_UPPER_UNDERSCORE_SLUG@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_UPPER_C_PREFIX = @PACKAGE_UPPER_C_PREFIX@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = \
  -I src/c-cpp/lib \
  -I $(srcdir)/src/c-cpp/lib \
  -I src/c-cpp/include \
  -I $(srcdir)/src/c-cpp/include \
  -I include \
  -I $(srcdir)/include \
  -I ../src/c-cpp/lib \
  -I $(srcdir)/../src/c-cpp/lib \
  -I ../src/c-cpp/include \
  -I $(srcdir)/../src/c-cpp/include \
  -I ../include \
  -I $(srcdir)/../include \
$(empty)

MOSTLYCLEANFILES = include/src/sst_status_map.inc
gen_targets = include/src/sst_status_map.inc
GATBPS_VPATH_SEARCH_BOT = \
  ; then \
    GATBPS_VPATH_SEARCH_d='.'; \
  else \
    GATBPS_VPATH_SEARCH_d=$(srcdir); \
    case "$${GATBPS_VPATH_SEARCH_d}" in \
      '/'*) \
      ;; \
      *) \
        GATBPS_VPATH_SEARCH_d='./'"$${GATBPS_VPATH_SEARCH_d}"; \
      ;; \
    esac; \
  fi

GATBPS_VPATH_SEARCH_RESULT = "$${GATBPS_VPATH_SEARCH_d}"
GATBPS_VPATH_SEARCH_TOP = \
  if 'test' '-r'

EXTRA_DIST = include/src/sst_status_map.inc
SUFFIXES = .1 .2 .3 .4 .5 .6 .7 .8 .9 .adoc .class .java .m4 .m4out
include_HEADERS = 
nodist_include_HEADERS = 
SUBDIRS = 
TSUF = $(TMPEXT).tmp
DOCKERFILE_THREADS = 1
GATBPS_EXPORT = case $$x in '' | *[!0-9A-Z_a-z]* | [0-9]*) printf '%s\n' ` `"GATBPS_EXPORT: x must be set to the name of the shell "` `"variable to export."` ` >&2; exit 1; esac; shift || exit $$?; GATBPS_EXPORT_VALUE=` sh - $(srcdir)/build-aux/gatbps-echo.sh -qq -- "$$@" ` || exit $$?; eval $$x=\$$GATBPS_EXPORT_VALUE; export $$x; :
GATBPS_MOSTLYCLEANFILES = 
GATBPS_CLEANFILES = 
GATBPS_DISTCLEANFILES = 
GATBPS_MAINTAINERCLEANFILES =  \
	build-aux/gatbps-gen-date.sh.cache/clean \
	build-aux/gatbps-gen-libtool-c.sh.cache/clean \
	build-aux/gatbps-gen-version.sh.cache/clean
GATBPS_UNINSTALL_MKDIRS = \
  $(bindir)/mkdir \
  $(datadir)/$(PACKAGE_TARNAME)/mkdir \
  $(datarootdir)/$(PACKAGE_TARNAME)/mkdir \
  $(includedir)/$(PACKAGE_TARNAME)/mkdir \
  $(libdir)/mkdir \
  $(libexecdir)/$(PACKAGE_TARNAME)/mkdir \
$(empty)

GATBPS_UNINSTALL_RMFRS = \
  $(datadir)/$(PACKAGE_TARNAME)/rmfr \
  $(datarootdir)/$(PACKAGE_TARNAME)/rmfr \
  $(includedir)/$(PACKAGE_TARNAME)/rmfr \
  $(libdir)/lib$(PACKAGE_TARNAME).a/rmfr \
  $(libdir)/lib$(PACKAGE_TARNAME).la/rmfr \
  $(libdir)/lib$(PACKAGE_TARNAME).so/rmfr \
  $(libexecdir)/$(PACKAGE_TARNAME)/rmfr \
$(empty)

GATBPS_RECIPE_MARKER_TOP = : Recipe starting: $@
GATBPS_RECIPE_MARKER_BOT = : Recipe finished: $@
GATBPS_at = @
GATBPS_V_NOP = $(GATBPS_V_NOP_@AM_V@)
GATBPS_V_NOP_ = $(GATBPS_V_NOP_@AM_DEFAULT_V@)
GATBPS_V_NOP_0 = 
GATBPS_V_NOP_1 = $(GATBPS_at)-:
GATBPS_V_ASCIIDOCTOR = $(GATBPS_V_ASCIIDOCTOR_@AM_V@)
GATBPS_V_ASCIIDOCTOR_ = $(GATBPS_V_ASCIIDOCTOR_@AM_DEFAULT_V@)
GATBPS_V_ASCIIDOCTOR_0 = @printf '  %s      %s\n' ASCIIDOCTOR $@ || :;
GATBPS_V_ASCIIDOCTOR_1 = 
GATBPS_V_ASCIIDOCTOR_PDF = $(GATBPS_V_ASCIIDOCTOR_PDF_@AM_V@)
GATBPS_V_ASCIIDOCTOR_PDF_ = $(GATBPS_V_ASCIIDOCTOR_PDF_@AM_DEFAULT_V@)
GATBPS_V_ASCIIDOCTOR_PDF_0 = @printf '  %s  %s\n' ASCIIDOCTOR-PDF $@ || :;
GATBPS_V_ASCIIDOCTOR_PDF_1 = 
GATBPS_V_AWK = $(GATBPS_V_AWK_@AM_V@)
GATBPS_V_AWK_ = $(GATBPS_V_AWK_@AM_DEFAULT_V@)
GATBPS_V_AWK_0 = @printf '  %s      %s\n' AWK $@ || :;
GATBPS_V_AWK_1 = 
GATBPS_V_FORCE = $(GATBPS_V_FORCE_@AM_V@)
GATBPS_V_FORCE_ = $(GATBPS_V_FORCE_@AM_DEFAULT_V@)
GATBPS_V_FORCE_0 = @printf '  %s    %s\n' FORCE $@ || :;
GATBPS_V_FORCE_1 = 
GATBPS_V_GATBPS = $(GATBPS_V_GATBPS_@AM_V@)
GATBPS_V_GATBPS_ = $(GATBPS_V_GATBPS_@AM_DEFAULT_V@)
GATBPS_V_GATBPS_0 = @printf '  %s   %s\n' GATBPS $@ || :;
GATBPS_V_GATBPS_1 = 
GATBPS_V_GUNZIP = $(GATBPS_V_GUNZIP_@AM_V@)
GATBPS_V_GUNZIP_ = $(GATBPS_V_GUNZIP_@AM_DEFAULT_V@)
GATBPS_V_GUNZIP_0 = @printf '  %s   %s\n' GUNZIP $@ || :;
GATBPS_V_GUNZIP_1 = 
GATBPS_V_GZIP = $(GATBPS_V_GZIP_@AM_V@)
GATBPS_V_GZIP_ = $(GATBPS_V_GZIP_@AM_DEFAULT_V@)
GATBPS_V_GZIP_0 = @printf '  %s     %s\n' GZIP $@ || :;
GATBPS_V_GZIP_1 = 
GATBPS_V_JAR = $(GATBPS_V_JAR_@AM_V@)
GATBPS_V_JAR_ = $(GATBPS_V_JAR_@AM_DEFAULT_V@)
GATBPS_V_JAR_0 = @printf '  %s      %s\n' JAR $@ || :;
GATBPS_V_JAR_1 = 
GATBPS_V_JAVAC = $(GATBPS_V_JAVAC_@AM_V@)
GATBPS_V_JAVAC_ = $(GATBPS_V_JAVAC_@AM_DEFAULT_V@)
GATBPS_V_JAVAC_0 = @printf '  %s    %s\n' JAVAC $@ || :;
GATBPS_V_JAVAC_1 = 
GATBPS_V_JAVADOC = $(GATBPS_V_JAVADOC_@AM_V@)
GATBPS_V_JAVADOC_ = $(GATBPS_V_JAVADOC_@AM_DEFAULT_V@)
GATBPS_V_JAVADOC_0 = @printf '  %s  %s\n' JAVADOC $@ || :;
GATBPS_V_JAVADOC_1 = 
GATBPS_V_JAVA_ = $(GATBPS_V_JAVA__@AM_V@)
GATBPS_V_JAVA__ = $(GATBPS_V_JAVA__@AM_DEFAULT_V@)
GATBPS_V_JAVA__0 = @printf '  %s     %s\n' JAVA $@ || :;
GATBPS_V_JAVA__1 = 
GATBPS_V_JDEPS = $(GATBPS_V_JDEPS_@AM_V@)
GATBPS_V_JDEPS_ = $(GATBPS_V_JDEPS_@AM_DEFAULT_V@)
GATBPS_V_JDEPS_0 = @printf '  %s    %s\n' JDEPS $@ || :;
GATBPS_V_JDEPS_1 = 
GATBPS_V_M4 = $(GATBPS_V_M4_@AM_V@)
GATBPS_V_M4_ = $(GATBPS_V_M4_@AM_DEFAULT_V@)
GATBPS_V_M4_0 = @printf '  %s       %s\n' M4 $@ || :;
GATBPS_V_M4_1 = 
GATBPS_V_MAKE = $(GATBPS_V_MAKE_@AM_V@)
GATBPS_V_MAKE_ = $(GATBPS_V_MAKE_@AM_DEFAULT_V@)
GATBPS_V_MAKE_0 = @printf '  %s     %s\n' MAKE $@ || :;
GATBPS_V_MAKE_1 = 
GATBPS_V_SQLITE3 = $(GATBPS_V_SQLITE3_@AM_V@)
GATBPS_V_SQLITE3_ = $(GATBPS_V_SQLITE3_@AM_DEFAULT_V@)
GATBPS_V_SQLITE3_0 = @printf '  %s  %s\n' SQLITE3 $@ || :;
GATBPS_V_SQLITE3_1 = 
GATBPS_V_TAR = $(GATBPS_V_TAR_@AM_V@)
GATBPS_V_TAR_ = $(GATBPS_V_TAR_@AM_DEFAULT_V@)
GATBPS_V_TAR_0 = @printf '  %s      %s\n' TAR $@ || :;
GATBPS_V_TAR_1 = 
GATBPS_V_UNTAR = $(GATBPS_V_UNTAR_@AM_V@)
GATBPS_V_UNTAR_ = $(GATBPS_V_UNTAR_@AM_DEFAULT_V@)
GATBPS_V_UNTAR_0 = @printf '  %s    %s\n' UNTAR $@ || :;
GATBPS_V_UNTAR_1 = 
GATBPS_V_UNXZ = $(GATBPS_V_UNXZ_@AM_V@)
GATBPS_V_UNXZ_ = $(GATBPS_V_UNXZ_@AM_DEFAULT_V@)
GATBPS_V_UNXZ_0 = @printf '  %s     %s\n' UNXZ $@ || :;
GATBPS_V_UNXZ_1 = 
GATBPS_V_UNZIP = $(GATBPS_V_UNZIP_@AM_V@)
GATBPS_V_UNZIP_ = $(GATBPS_V_UNZIP_@AM_DEFAULT_V@)
GATBPS_V_UNZIP_0 = @printf '  %s    %s\n' UNZIP $@ || :;
GATBPS_V_UNZIP_1 = 
GATBPS_V_XZ = $(GATBPS_V_XZ_@AM_V@)
GATBPS_V_XZ_ = $(GATBPS_V_XZ_@AM_DEFAULT_V@)
GATBPS_V_XZ_0 = @printf '  %s       %s\n' XZ $@ || :;
GATBPS_V_XZ_1 = 
GATBPS_V_ZIP = $(GATBPS_V_ZIP_@AM_V@)
GATBPS_V_ZIP_ = $(GATBPS_V_ZIP_@AM_DEFAULT_V@)
GATBPS_V_ZIP_0 = @printf '  %s      %s\n' ZIP $@ || :;
GATBPS_V_ZIP_1 = 
GATBPS_DISTFILES_N = 100
GATBPS_DISTFILES_0 = 
GATBPS_DISTFILES_1 = 
GATBPS_DISTFILES_2 = 
GATBPS_DISTFILES_3 = 
GATBPS_DISTFILES_4 = 
GATBPS_DISTFILES_5 = 
GATBPS_DISTFILES_6 = 
GATBPS_DISTFILES_7 = 
GATBPS_DISTFILES_8 = 
GATBPS_DISTFILES_9 = 
GATBPS_DISTFILES_10 = 
GATBPS_DISTFILES_11 = 
GATBPS_DISTFILES_12 = 
GATBPS_DISTFILES_13 = 
GATBPS_DISTFILES_14 = 
GATBPS_DISTFILES_15 = 
GATBPS_DISTFILES_16 = 
GATBPS_DISTFILES_17 = 
GATBPS_DISTFILES_18 = 
GATBPS_DISTFILES_19 = 
GATBPS_DISTFILES_20 = 
GATBPS_DISTFILES_21 = 
GATBPS_DISTFILES_22 = 
GATBPS_DISTFILES_23 = 
GATBPS_DISTFILES_24 = 
GATBPS_DISTFILES_25 = 
GATBPS_DISTFILES_26 = 
GATBPS_DISTFILES_27 = 
GATBPS_DISTFILES_28 = 
GATBPS_DISTFILES_29 = 
GATBPS_DISTFILES_30 = 
GATBPS_DISTFILES_31 = 
GATBPS_DISTFILES_32 = 
GATBPS_DISTFILES_33 = 
GATBPS_DISTFILES_34 = 
GATBPS_DISTFILES_35 = 
GATBPS_DISTFILES_36 = 
GATBPS_DISTFILES_37 = 
GATBPS_DISTFILES_38 = 
GATBPS_DISTFILES_39 = 
GATBPS_DISTFILES_40 = 
GATBPS_DISTFILES_41 = 
GATBPS_DISTFILES_42 = 
GATBPS_DISTFILES_43 = 
GATBPS_DISTFILES_44 = 
GATBPS_DISTFILES_45 = 
GATBPS_DISTFILES_46 = 
GATBPS_DISTFILES_47 = 
GATBPS_DISTFILES_48 = 
GATBPS_DISTFILES_49 = 
GATBPS_DISTFILES_50 = 
GATBPS_DISTFILES_51 = 
GATBPS_DISTFILES_52 = 
GATBPS_DISTFILES_53 = 
GATBPS_DISTFILES_54 = 
GATBPS_DISTFILES_55 = 
GATBPS_DISTFILES_56 = 
GATBPS_DISTFILES_57 = 
GATBPS_DISTFILES_58 = 
GATBPS_DISTFILES_59 = 
GATBPS_DISTFILES_60 = 
GATBPS_DISTFILES_61 = 
GATBPS_DISTFILES_62 = 
GATBPS_DISTFILES_63 = 
GATBPS_DISTFILES_64 = 
GATBPS_DISTFILES_65 = 
GATBPS_DISTFILES_66 = 
GATBPS_DISTFILES_67 = 
GATBPS_DISTFILES_68 = 
GATBPS_DISTFILES_69 = 
GATBPS_DISTFILES_70 = 
GATBPS_DISTFILES_71 = 
GATBPS_DISTFILES_72 = 
GATBPS_DISTFILES_73 = 
GATBPS_DISTFILES_74 = 
GATBPS_DISTFILES_75 = 
GATBPS_DISTFILES_76 = 
GATBPS_DISTFILES_77 = 
GATBPS_DISTFILES_78 = 
GATBPS_DISTFILES_79 = 
GATBPS_DISTFILES_80 = 
GATBPS_DISTFILES_81 = 
GATBPS_DISTFILES_82 = 
GATBPS_DISTFILES_83 = 
GATBPS_DISTFILES_84 = 
GATBPS_DISTFILES_85 = 
GATBPS_DISTFILES_86 = 
GATBPS_DISTFILES_87 = 
GATBPS_DISTFILES_88 = 
GATBPS_DISTFILES_89 = 
GATBPS_DISTFILES_90 = 
GATBPS_DISTFILES_91 = 
GATBPS_DISTFILES_92 = 
GATBPS_DISTFILES_93 = 
GATBPS_DISTFILES_94 = 
GATBPS_DISTFILES_95 = 
GATBPS_DISTFILES_96 = 
GATBPS_DISTFILES_97 = 
GATBPS_DISTFILES_98 = 
GATBPS_DISTFILES_99 = 
GATBPS_DISTFILES = $(DISTFILES) $(GATBPS_DISTFILES_0) \
	$(GATBPS_DISTFILES_1) $(GATBPS_DISTFILES_2) \
	$(GATBPS_DISTFILES_3) $(GATBPS_DISTFILES_4) \
	$(GATBPS_DISTFILES_5) $(GATBPS_DISTFILES_6) \
	$(GATBPS_DISTFILES_7) $(GATBPS_DISTFILES_8) \
	$(GATBPS_DISTFILES_9) $(GATBPS_DISTFILES_10) \
	$(GATBPS_DISTFILES_11) $(GATBPS_DISTFILES_12) \
	$(GATBPS_DISTFILES_13) $(GATBPS_DISTFILES_14) \
	$(GATBPS_DISTFILES_15) $(GATBPS_DISTFILES_16) \
	$(GATBPS_DISTFILES_17) $(GATBPS_DISTFILES_18) \
	$(GATBPS_DISTFILES_19) $(GATBPS_DISTFILES_20) \
	$(GATBPS_DISTFILES_21) $(GATBPS_DISTFILES_22) \
	$(GATBPS_DISTFILES_23) $(GATBPS_DISTFILES_24) \
	$(GATBPS_DISTFILES_25) $(GATBPS_DISTFILES_26) \
	$(GATBPS_DISTFILES_27) $(GATBPS_DISTFILES_28) \
	$(GATBPS_DISTFILES_29) $(GATBPS_DISTFILES_30) \
	$(GATBPS_DISTFILES_31) $(GATBPS_DISTFILES_32) \
	$(GATBPS_DISTFILES_33) $(GATBPS_DISTFILES_34) \
	$(GATBPS_DISTFILES_35) $(GATBPS_DISTFILES_36) \
	$(GATBPS_DISTFILES_37) $(GATBPS_DISTFILES_38) \
	$(GATBPS_DISTFILES_39) $(GATBPS_DISTFILES_40) \
	$(GATBPS_DISTFILES_41) $(GATBPS_DISTFILES_42) \
	$(GATBPS_DISTFILES_43) $(GATBPS_DISTFILES_44) \
	$(GATBPS_DISTFILES_45) $(GATBPS_DISTFILES_46) \
	$(GATBPS_DISTFILES_47) $(GATBPS_DISTFILES_48) \
	$(GATBPS_DISTFILES_49) $(GATBPS_DISTFILES_50) \
	$(GATBPS_DISTFILES_51) $(GATBPS_DISTFILES_52) \
	$(GATBPS_DISTFILES_53) $(GATBPS_DISTFILES_54) \
	$(GATBPS_DISTFILES_55) $(GATBPS_DISTFILES_56) \
	$(GATBPS_DISTFILES_57) $(GATBPS_DISTFILES_58) \
	$(GATBPS_DISTFILES_59) $(GATBPS_DISTFILES_60) \
	$(GATBPS_DISTFILES_61) $(GATBPS_DISTFILES_62) \
	$(GATBPS_DISTFILES_63) $(GATBPS_DISTFILES_64) \
	$(GATBPS_DISTFILES_65) $(GATBPS_DISTFILES_66) \
	$(GATBPS_DISTFILES_67) $(GATBPS_DISTFILES_68) \
	$(GATBPS_DISTFILES_69) $(GATBPS_DISTFILES_70) \
	$(GATBPS_DISTFILES_71) $(GATBPS_DISTFILES_72) \
	$(GATBPS_DISTFILES_73) $(GATBPS_DISTFILES_74) \
	$(GATBPS_DISTFILES_75) $(GATBPS_DISTFILES_76) \
	$(GATBPS_DISTFILES_77) $(GATBPS_DISTFILES_78) \
	$(GATBPS_DISTFILES_79) $(GATBPS_DISTFILES_80) \
	$(GATBPS_DISTFILES_81) $(GATBPS_DISTFILES_82) \
	$(GATBPS_DISTFILES_83) $(GATBPS_DISTFILES_84) \
	$(GATBPS_DISTFILES_85) $(GATBPS_DISTFILES_86) \
	$(GATBPS_DISTFILES_87) $(GATBPS_DISTFILES_88) \
	$(GATBPS_DISTFILES_89) $(GATBPS_DISTFILES_90) \
	$(GATBPS_DISTFILES_91) $(GATBPS_DISTFILES_92) \
	$(GATBPS_DISTFILES_93) $(GATBPS_DISTFILES_94) \
	$(GATBPS_DISTFILES_95) $(GATBPS_DISTFILES_96) \
	$(GATBPS_DISTFILES_97) $(GATBPS_DISTFILES_98) \
	$(GATBPS_DISTFILES_99)

#-----------------------------------------------------------------------
# The list-distfiles target
#-----------------------------------------------------------------------
#
# The list-distfiles target outputs the list of distributed files and
# directories, one per line.
#
# Each entry is listed as if it exists in the build directory, even if
# it only exists in the source directory during a VPATH build. The entry
# will always begin with "./". Additional "." and ".." components may be
# present. Each ".." component will not raise the intermediate directory
# above the root directory of the project.
#
# The order of the entries is unspecified, and entries may be repeated.
# Textually different entries that refer to the same file or directory
# will become identical after removing all "." components, normalizing
# all ".." components, and replacing each sequence of two or more "/"
# characters with a single "/" character.
#
LIST_DISTFILES_PREFIX = ./
GATBPS_COMMON_ASCIIDOCTOR_FLAGS = \
  --failure-level=WARN \
  -a attribute-missing=warn \
$(prevent_an_empty_line)

GATBPS_GEN_VERSION_CACHE_FILES = build-aux/gatbps-gen-date.sh.cache \
	build-aux/gatbps-gen-libtool-c.sh.cache \
	build-aux/gatbps-gen-version.sh.cache
GATBPS_INNER_JAR_SUFFIX = /inner
GATBPS_OUTER_JAR_SUFFIX = 
bin_sst_status_map_generator_CFLAGS = \
  $(AM_CFLAGS) \
  $(EXE_CFLAGS) \
$(empty)

bin_sst_status_map_generator_LDFLAGS = \
  $(AM_LDFLAGS) \
  $(EXE_LDFLAGS) \
$(empty)

bin_sst_status_map_generator_SOURCES =  \
	src/c-cpp/lib/sst_status_list.c src/sst_status_map_generator.c
top_targets = 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .1 .2 .3 .4 .5 .6 .7 .8 .9 .adoc .class .java .m4 .m4out .c .html .o .obj .pdf
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../build-aux/GATBPS_VPATH_SEARCH.am $(srcdir)/../build-aux/gatbps.am $(srcdir)/bin/sst_status_map_generator.am $(srcdir)/build-src/top_targets.am $(srcdir)/include/src/sst_status_map.inc.am $(srcdir)/../include/src/sst_status_map.inc.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/../build-aux/GATBPS_VPATH_SEARCH.am $(srcdir)/../build-aux/gatbps.am $(srcdir)/bin/sst_status_map_generator.am $(srcdir)/build-src/top_targets.am $(srcdir)/include/src/sst_status_map.inc.am $(srcdir)/../include/src/sst_status_map.inc.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
src/c-cpp/lib/$(am__dirstamp):
	@$(MKDIR_P) src/c-cpp/lib
	@: > src/c-cpp/lib/$(am__dirstamp)
src/c-cpp/lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/c-cpp/lib/$(DEPDIR)
	@: > src/c-cpp/lib/$(DEPDIR)/$(am__dirstamp)
src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.$(OBJEXT):  \
	src/c-cpp/lib/$(am__dirstamp) \
	src/c-cpp/lib/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/bin_sst_status_map_generator-sst_status_map_generator.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
bin/$(am__dirstamp):
	@$(MKDIR_P) bin
	@: > bin/$(am__dirstamp)

bin/sst_status_map_generator$(EXEEXT): $(bin_sst_status_map_generator_OBJECTS) $(bin_sst_status_map_generator_DEPENDENCIES) $(EXTRA_bin_sst_status_map_generator_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/sst_status_map_generator$(EXEEXT)
	$(AM_V_CCLD)$(bin_sst_status_map_generator_LINK) $(bin_sst_status_map_generator_OBJECTS) $(bin_sst_status_map_generator_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f src/c-cpp/lib/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.o: src/c-cpp/lib/sst_status_list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) -MT src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.o -MD -MP -MF src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Tpo -c -o src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.o `test -f 'src/c-cpp/lib/sst_status_list.c' || echo '$(srcdir)/'`src/c-cpp/lib/sst_status_list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Tpo src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/c-cpp/lib/sst_status_list.c' object='src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) -c -o src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.o `test -f 'src/c-cpp/lib/sst_status_list.c' || echo '$(srcdir)/'`src/c-cpp/lib/sst_status_list.c

src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.obj: src/c-cpp/lib/sst_status_list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) -MT src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.obj -MD -MP -MF src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Tpo -c -o src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.obj `if test -f 'src/c-cpp/lib/sst_status_list.c'; then $(CYGPATH_W) 'src/c-cpp/lib/sst_status_list.c'; else $(CYGPATH_W) '$(srcdir)/src/c-cpp/lib/sst_status_list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Tpo src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/c-cpp/lib/sst_status_list.c' object='src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) -c -o src/c-cpp/lib/bin_sst_status_map_generator-sst_status_list.obj `if test -f 'src/c-cpp/lib/sst_status_list.c'; then $(CYGPATH_W) 'src/c-cpp/lib/sst_status_list.c'; else $(CYGPATH_W) '$(srcdir)/src/c-cpp/lib/sst_status_list.c'; fi`

src/bin_sst_status_map_generator-sst_status_map_generator.o: src/sst_status_map_generator.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) -MT src/bin_sst_status_map_generator-sst_status_map_generator.o -MD -MP -MF src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Tpo -c -o src/bin_sst_status_map_generator-sst_status_map_generator.o `test -f 'src/sst_status_map_generator.c' || echo '$(srcdir)/'`src/sst_status_map_generator.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Tpo src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/sst_status_map_generator.c' object='src/bin_sst_status_map_generator-sst_status_map_generator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) -c -o src/bin_sst_status_map_generator-sst_status_map_generator.o `test -f 'src/sst_status_map_generator.c' || echo '$(srcdir)/'`src/sst_status_map_generator.c

src/bin_sst_status_map_generator-sst_status_map_generator.obj: src/sst_status_map_generator.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) -MT src/bin_sst_status_map_generator-sst_status_map_generator.obj -MD -MP -MF src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Tpo -c -o src/bin_sst_status_map_generator-sst_status_map_generator.obj `if test -f 'src/sst_status_map_generator.c'; then $(CYGPATH_W) 'src/sst_status_map_generator.c'; else $(CYGPATH_W) '$(srcdir)/src/sst_status_map_generator.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Tpo src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/sst_status_map_generator.c' object='src/bin_sst_status_map_generator-sst_status_map_generator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_sst_status_map_generator_CFLAGS) $(CFLAGS) -c -o src/bin_sst_status_map_generator-sst_status_map_generator.obj `if test -f 'src/sst_status_map_generator.c'; then $(CYGPATH_W) 'src/sst_status_map_generator.c'; else $(CYGPATH_W) '$(srcdir)/src/sst_status_map_generator.c'; fi`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && $(MAKE) $(AM_MAKEFLAGS) distcheck-hook \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am: installdirs-local
	for dir in "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bin/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/c-cpp/lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/c-cpp/lib/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Po
	-rm -f src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-recursive

dvi-am: dvi-local

html: html-recursive

html-am: html-local

info: info-recursive

info-am: info-local

install-data-am: install-data-local install-includeHEADERS \
	install-nodist_includeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am: install-dvi-local

install-exec-am: install-exec-local
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am: install-html-local

install-info: install-info-recursive

install-info-am: install-info-local

install-man:

install-pdf: install-pdf-recursive

install-pdf-am: install-pdf-local

install-ps: install-ps-recursive

install-ps-am: install-ps-local

installcheck-am: installcheck-local

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f src/$(DEPDIR)/bin_sst_status_map_generator-sst_status_map_generator.Po
	-rm -f src/c-cpp/lib/$(DEPDIR)/bin_sst_status_map_generator-sst_status_list.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-local

pdf: pdf-recursive

pdf-am: pdf-local

ps: ps-recursive

ps-am: ps-local

uninstall-am: uninstall-includeHEADERS uninstall-local \
	uninstall-nodist_includeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: $(am__recursive_targets) check-am install-am install-data-am \
	install-exec-am install-strip uninstall-am

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	am--depfiles am--refresh check check-am check-local clean \
	clean-cscope clean-generic clean-local clean-noinstPROGRAMS \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip dist-zstd distcheck distclean distclean-compile \
	distclean-generic distclean-local distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am dvi-local \
	html html-am html-local info info-am info-local install \
	install-am install-data install-data-am install-data-hook \
	install-data-local install-dvi install-dvi-am \
	install-dvi-local install-exec install-exec-am \
	install-exec-hook install-exec-local install-html \
	install-html-am install-html-local install-includeHEADERS \
	install-info install-info-am install-info-local install-man \
	install-nodist_includeHEADERS install-pdf install-pdf-am \
	install-pdf-local install-ps install-ps-am install-ps-local \
	install-strip installcheck installcheck-am installcheck-local \
	installdirs installdirs-am installdirs-local maintainer-clean \
	maintainer-clean-generic maintainer-clean-local mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-local pdf \
	pdf-am pdf-local ps ps-am ps-local tags tags-am uninstall \
	uninstall-am uninstall-hook uninstall-includeHEADERS \
	uninstall-local uninstall-nodist_includeHEADERS

.PRECIOUS: Makefile


.PHONY: FORCE
FORCE:
GATBPS_MOSTLYCLEANFILES/dummy $(GATBPS_MOSTLYCLEANFILES): FORCE
	@case '$@' in *[0-9A-Za-z]/clean) :; ;; *) m='Makefile: GATBPS_MOSTLYCLEANFILES ($@): Error:'; m=$$m" Target name must end with [0-9A-Za-z]/clean."; printf '%s\n' "$$m" >&2; exit 1; esac;
	rm -f -r $(@D) $(@D)$(TSUF)*
mostlyclean-local: $(GATBPS_MOSTLYCLEANFILES)
GATBPS_CLEANFILES/dummy $(GATBPS_CLEANFILES): FORCE
	@case '$@' in *[0-9A-Za-z]/clean) :; ;; *) m='Makefile: GATBPS_CLEANFILES ($@): Error:'; m=$$m" Target name must end with [0-9A-Za-z]/clean."; printf '%s\n' "$$m" >&2; exit 1; esac;
	rm -f -r $(@D) $(@D)$(TSUF)*
clean-local: $(GATBPS_CLEANFILES)
GATBPS_DISTCLEANFILES/dummy $(GATBPS_DISTCLEANFILES): FORCE
	@case '$@' in *[0-9A-Za-z]/clean) :; ;; *) m='Makefile: GATBPS_DISTCLEANFILES ($@): Error:'; m=$$m" Target name must end with [0-9A-Za-z]/clean."; printf '%s\n' "$$m" >&2; exit 1; esac;
	rm -f -r $(@D) $(@D)$(TSUF)*
distclean-local: $(GATBPS_DISTCLEANFILES)
GATBPS_MAINTAINERCLEANFILES/dummy $(GATBPS_MAINTAINERCLEANFILES): FORCE
	@case '$@' in *[0-9A-Za-z]/clean) :; ;; *) m='Makefile: GATBPS_MAINTAINERCLEANFILES ($@): Error:'; m=$$m" Target name must end with [0-9A-Za-z]/clean."; printf '%s\n' "$$m" >&2; exit 1; esac;
	rm -f -r $(@D) $(@D)$(TSUF)*
maintainer-clean-local: $(GATBPS_MAINTAINERCLEANFILES)

all-local:
check-local:
clean-local:
dist-hook:
distcheck-hook:
distclean-local:
dvi-local:
html-local:
info-local:
install-data-hook:
install-data-local:
install-dvi-local:
install-exec-hook:
install-exec-local:
install-html-local:
install-info-local:
install-pdf-local:
install-ps-local:
installcheck-local:
installdirs-local:
maintainer-clean-local:
mostlyclean-local:
pdf-local:
ps-local:
uninstall-hook:
uninstall-local:

install-prehook: FORCE

install-am: FORCE install-prehook all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-data-am install-exec-am

uninstall-prehook: FORCE

uninstall: FORCE uninstall-prehook
	@$(MAKE) $(AM_MAKEFLAGS) uninstall-recursive

install-prehook: uninstall

GATBPS_UNINSTALL_MKDIRS/dummy $(GATBPS_UNINSTALL_MKDIRS): FORCE
	@case '$@' in *[0-9A-Za-z]/mkdir) :; ;; *) m="Makefile: GATBPS_UNINSTALL_MKDIRS ($@): Error:"; m="$${m?} Target name must end with [0-9A-Za-z]/mkdir."; printf '%s\n' "$${m?}" >&2; exit 1; esac;
	$(MKDIR_P) $(DESTDIR)$(@D)

uninstall-prehook: FORCE $(GATBPS_UNINSTALL_MKDIRS)

GATBPS_UNINSTALL_RMFRS/dummy $(GATBPS_UNINSTALL_RMFRS): FORCE
	@case '$@' in *[0-9A-Za-z]/rmfr) :; ;; *) m="Makefile: GATBPS_UNINSTALL_RMFRS ($@): Error:"; m="$${m?} Target name must end with [0-9A-Za-z]/rmfr."; printf '%s\n' "$${m?}" >&2; exit 1; esac;
	rm -f -r $(DESTDIR)$(@D)

uninstall-hook: FORCE $(GATBPS_UNINSTALL_RMFRS)

GATBPS_DISTFILES_CHMOD: FORCE
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( distdir='$(distdir)'; case $$distdir in [!./]*) distdir=./$$distdir; esac; if $(AM_V_P); then sq=; for cqDe_w in chmod -R u+w "$$distdir" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; chmod -R u+w "$$distdir" || exit $$?; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: FORCE

GATBPS_DISTFILES_0: FORCE
GATBPS_DISTFILES_0: $(GATBPS_DISTFILES_0)
GATBPS_DISTFILES_0: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_0); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_0 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_0 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_0

GATBPS_DISTFILES_1: FORCE
GATBPS_DISTFILES_1: $(GATBPS_DISTFILES_1)
GATBPS_DISTFILES_1: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_1); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_1 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_1 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_1

GATBPS_DISTFILES_2: FORCE
GATBPS_DISTFILES_2: $(GATBPS_DISTFILES_2)
GATBPS_DISTFILES_2: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_2); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_2 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_2 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_2

GATBPS_DISTFILES_3: FORCE
GATBPS_DISTFILES_3: $(GATBPS_DISTFILES_3)
GATBPS_DISTFILES_3: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_3); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_3 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_3 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_3

GATBPS_DISTFILES_4: FORCE
GATBPS_DISTFILES_4: $(GATBPS_DISTFILES_4)
GATBPS_DISTFILES_4: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_4); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_4 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_4 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_4

GATBPS_DISTFILES_5: FORCE
GATBPS_DISTFILES_5: $(GATBPS_DISTFILES_5)
GATBPS_DISTFILES_5: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_5); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_5 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_5 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_5

GATBPS_DISTFILES_6: FORCE
GATBPS_DISTFILES_6: $(GATBPS_DISTFILES_6)
GATBPS_DISTFILES_6: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_6); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_6 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_6 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_6

GATBPS_DISTFILES_7: FORCE
GATBPS_DISTFILES_7: $(GATBPS_DISTFILES_7)
GATBPS_DISTFILES_7: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_7); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_7 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_7 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_7

GATBPS_DISTFILES_8: FORCE
GATBPS_DISTFILES_8: $(GATBPS_DISTFILES_8)
GATBPS_DISTFILES_8: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_8); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_8 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_8 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_8

GATBPS_DISTFILES_9: FORCE
GATBPS_DISTFILES_9: $(GATBPS_DISTFILES_9)
GATBPS_DISTFILES_9: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_9); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_9 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_9 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_9

GATBPS_DISTFILES_10: FORCE
GATBPS_DISTFILES_10: $(GATBPS_DISTFILES_10)
GATBPS_DISTFILES_10: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_10); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_10 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_10 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_10

GATBPS_DISTFILES_11: FORCE
GATBPS_DISTFILES_11: $(GATBPS_DISTFILES_11)
GATBPS_DISTFILES_11: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_11); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_11 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_11 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_11

GATBPS_DISTFILES_12: FORCE
GATBPS_DISTFILES_12: $(GATBPS_DISTFILES_12)
GATBPS_DISTFILES_12: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_12); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_12 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_12 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_12

GATBPS_DISTFILES_13: FORCE
GATBPS_DISTFILES_13: $(GATBPS_DISTFILES_13)
GATBPS_DISTFILES_13: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_13); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_13 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_13 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_13

GATBPS_DISTFILES_14: FORCE
GATBPS_DISTFILES_14: $(GATBPS_DISTFILES_14)
GATBPS_DISTFILES_14: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_14); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_14 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_14 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_14

GATBPS_DISTFILES_15: FORCE
GATBPS_DISTFILES_15: $(GATBPS_DISTFILES_15)
GATBPS_DISTFILES_15: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_15); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_15 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_15 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_15

GATBPS_DISTFILES_16: FORCE
GATBPS_DISTFILES_16: $(GATBPS_DISTFILES_16)
GATBPS_DISTFILES_16: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_16); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_16 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_16 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_16

GATBPS_DISTFILES_17: FORCE
GATBPS_DISTFILES_17: $(GATBPS_DISTFILES_17)
GATBPS_DISTFILES_17: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_17); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_17 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_17 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_17

GATBPS_DISTFILES_18: FORCE
GATBPS_DISTFILES_18: $(GATBPS_DISTFILES_18)
GATBPS_DISTFILES_18: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_18); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_18 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_18 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_18

GATBPS_DISTFILES_19: FORCE
GATBPS_DISTFILES_19: $(GATBPS_DISTFILES_19)
GATBPS_DISTFILES_19: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_19); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_19 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_19 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_19

GATBPS_DISTFILES_20: FORCE
GATBPS_DISTFILES_20: $(GATBPS_DISTFILES_20)
GATBPS_DISTFILES_20: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_20); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_20 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_20 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_20

GATBPS_DISTFILES_21: FORCE
GATBPS_DISTFILES_21: $(GATBPS_DISTFILES_21)
GATBPS_DISTFILES_21: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_21); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_21 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_21 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_21

GATBPS_DISTFILES_22: FORCE
GATBPS_DISTFILES_22: $(GATBPS_DISTFILES_22)
GATBPS_DISTFILES_22: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_22); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_22 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_22 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_22

GATBPS_DISTFILES_23: FORCE
GATBPS_DISTFILES_23: $(GATBPS_DISTFILES_23)
GATBPS_DISTFILES_23: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_23); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_23 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_23 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_23

GATBPS_DISTFILES_24: FORCE
GATBPS_DISTFILES_24: $(GATBPS_DISTFILES_24)
GATBPS_DISTFILES_24: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_24); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_24 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_24 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_24

GATBPS_DISTFILES_25: FORCE
GATBPS_DISTFILES_25: $(GATBPS_DISTFILES_25)
GATBPS_DISTFILES_25: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_25); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_25 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_25 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_25

GATBPS_DISTFILES_26: FORCE
GATBPS_DISTFILES_26: $(GATBPS_DISTFILES_26)
GATBPS_DISTFILES_26: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_26); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_26 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_26 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_26

GATBPS_DISTFILES_27: FORCE
GATBPS_DISTFILES_27: $(GATBPS_DISTFILES_27)
GATBPS_DISTFILES_27: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_27); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_27 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_27 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_27

GATBPS_DISTFILES_28: FORCE
GATBPS_DISTFILES_28: $(GATBPS_DISTFILES_28)
GATBPS_DISTFILES_28: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_28); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_28 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_28 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_28

GATBPS_DISTFILES_29: FORCE
GATBPS_DISTFILES_29: $(GATBPS_DISTFILES_29)
GATBPS_DISTFILES_29: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_29); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_29 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_29 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_29

GATBPS_DISTFILES_30: FORCE
GATBPS_DISTFILES_30: $(GATBPS_DISTFILES_30)
GATBPS_DISTFILES_30: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_30); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_30 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_30 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_30

GATBPS_DISTFILES_31: FORCE
GATBPS_DISTFILES_31: $(GATBPS_DISTFILES_31)
GATBPS_DISTFILES_31: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_31); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_31 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_31 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_31

GATBPS_DISTFILES_32: FORCE
GATBPS_DISTFILES_32: $(GATBPS_DISTFILES_32)
GATBPS_DISTFILES_32: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_32); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_32 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_32 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_32

GATBPS_DISTFILES_33: FORCE
GATBPS_DISTFILES_33: $(GATBPS_DISTFILES_33)
GATBPS_DISTFILES_33: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_33); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_33 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_33 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_33

GATBPS_DISTFILES_34: FORCE
GATBPS_DISTFILES_34: $(GATBPS_DISTFILES_34)
GATBPS_DISTFILES_34: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_34); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_34 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_34 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_34

GATBPS_DISTFILES_35: FORCE
GATBPS_DISTFILES_35: $(GATBPS_DISTFILES_35)
GATBPS_DISTFILES_35: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_35); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_35 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_35 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_35

GATBPS_DISTFILES_36: FORCE
GATBPS_DISTFILES_36: $(GATBPS_DISTFILES_36)
GATBPS_DISTFILES_36: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_36); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_36 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_36 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_36

GATBPS_DISTFILES_37: FORCE
GATBPS_DISTFILES_37: $(GATBPS_DISTFILES_37)
GATBPS_DISTFILES_37: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_37); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_37 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_37 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_37

GATBPS_DISTFILES_38: FORCE
GATBPS_DISTFILES_38: $(GATBPS_DISTFILES_38)
GATBPS_DISTFILES_38: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_38); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_38 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_38 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_38

GATBPS_DISTFILES_39: FORCE
GATBPS_DISTFILES_39: $(GATBPS_DISTFILES_39)
GATBPS_DISTFILES_39: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_39); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_39 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_39 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_39

GATBPS_DISTFILES_40: FORCE
GATBPS_DISTFILES_40: $(GATBPS_DISTFILES_40)
GATBPS_DISTFILES_40: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_40); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_40 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_40 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_40

GATBPS_DISTFILES_41: FORCE
GATBPS_DISTFILES_41: $(GATBPS_DISTFILES_41)
GATBPS_DISTFILES_41: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_41); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_41 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_41 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_41

GATBPS_DISTFILES_42: FORCE
GATBPS_DISTFILES_42: $(GATBPS_DISTFILES_42)
GATBPS_DISTFILES_42: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_42); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_42 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_42 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_42

GATBPS_DISTFILES_43: FORCE
GATBPS_DISTFILES_43: $(GATBPS_DISTFILES_43)
GATBPS_DISTFILES_43: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_43); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_43 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_43 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_43

GATBPS_DISTFILES_44: FORCE
GATBPS_DISTFILES_44: $(GATBPS_DISTFILES_44)
GATBPS_DISTFILES_44: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_44); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_44 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_44 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_44

GATBPS_DISTFILES_45: FORCE
GATBPS_DISTFILES_45: $(GATBPS_DISTFILES_45)
GATBPS_DISTFILES_45: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_45); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_45 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_45 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_45

GATBPS_DISTFILES_46: FORCE
GATBPS_DISTFILES_46: $(GATBPS_DISTFILES_46)
GATBPS_DISTFILES_46: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_46); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_46 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_46 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_46

GATBPS_DISTFILES_47: FORCE
GATBPS_DISTFILES_47: $(GATBPS_DISTFILES_47)
GATBPS_DISTFILES_47: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_47); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_47 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_47 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_47

GATBPS_DISTFILES_48: FORCE
GATBPS_DISTFILES_48: $(GATBPS_DISTFILES_48)
GATBPS_DISTFILES_48: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_48); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_48 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_48 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_48

GATBPS_DISTFILES_49: FORCE
GATBPS_DISTFILES_49: $(GATBPS_DISTFILES_49)
GATBPS_DISTFILES_49: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_49); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_49 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_49 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_49

GATBPS_DISTFILES_50: FORCE
GATBPS_DISTFILES_50: $(GATBPS_DISTFILES_50)
GATBPS_DISTFILES_50: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_50); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_50 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_50 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_50

GATBPS_DISTFILES_51: FORCE
GATBPS_DISTFILES_51: $(GATBPS_DISTFILES_51)
GATBPS_DISTFILES_51: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_51); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_51 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_51 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_51

GATBPS_DISTFILES_52: FORCE
GATBPS_DISTFILES_52: $(GATBPS_DISTFILES_52)
GATBPS_DISTFILES_52: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_52); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_52 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_52 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_52

GATBPS_DISTFILES_53: FORCE
GATBPS_DISTFILES_53: $(GATBPS_DISTFILES_53)
GATBPS_DISTFILES_53: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_53); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_53 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_53 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_53

GATBPS_DISTFILES_54: FORCE
GATBPS_DISTFILES_54: $(GATBPS_DISTFILES_54)
GATBPS_DISTFILES_54: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_54); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_54 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_54 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_54

GATBPS_DISTFILES_55: FORCE
GATBPS_DISTFILES_55: $(GATBPS_DISTFILES_55)
GATBPS_DISTFILES_55: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_55); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_55 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_55 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_55

GATBPS_DISTFILES_56: FORCE
GATBPS_DISTFILES_56: $(GATBPS_DISTFILES_56)
GATBPS_DISTFILES_56: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_56); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_56 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_56 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_56

GATBPS_DISTFILES_57: FORCE
GATBPS_DISTFILES_57: $(GATBPS_DISTFILES_57)
GATBPS_DISTFILES_57: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_57); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_57 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_57 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_57

GATBPS_DISTFILES_58: FORCE
GATBPS_DISTFILES_58: $(GATBPS_DISTFILES_58)
GATBPS_DISTFILES_58: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_58); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_58 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_58 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_58

GATBPS_DISTFILES_59: FORCE
GATBPS_DISTFILES_59: $(GATBPS_DISTFILES_59)
GATBPS_DISTFILES_59: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_59); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_59 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_59 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_59

GATBPS_DISTFILES_60: FORCE
GATBPS_DISTFILES_60: $(GATBPS_DISTFILES_60)
GATBPS_DISTFILES_60: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_60); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_60 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_60 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_60

GATBPS_DISTFILES_61: FORCE
GATBPS_DISTFILES_61: $(GATBPS_DISTFILES_61)
GATBPS_DISTFILES_61: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_61); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_61 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_61 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_61

GATBPS_DISTFILES_62: FORCE
GATBPS_DISTFILES_62: $(GATBPS_DISTFILES_62)
GATBPS_DISTFILES_62: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_62); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_62 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_62 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_62

GATBPS_DISTFILES_63: FORCE
GATBPS_DISTFILES_63: $(GATBPS_DISTFILES_63)
GATBPS_DISTFILES_63: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_63); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_63 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_63 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_63

GATBPS_DISTFILES_64: FORCE
GATBPS_DISTFILES_64: $(GATBPS_DISTFILES_64)
GATBPS_DISTFILES_64: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_64); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_64 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_64 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_64

GATBPS_DISTFILES_65: FORCE
GATBPS_DISTFILES_65: $(GATBPS_DISTFILES_65)
GATBPS_DISTFILES_65: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_65); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_65 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_65 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_65

GATBPS_DISTFILES_66: FORCE
GATBPS_DISTFILES_66: $(GATBPS_DISTFILES_66)
GATBPS_DISTFILES_66: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_66); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_66 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_66 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_66

GATBPS_DISTFILES_67: FORCE
GATBPS_DISTFILES_67: $(GATBPS_DISTFILES_67)
GATBPS_DISTFILES_67: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_67); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_67 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_67 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_67

GATBPS_DISTFILES_68: FORCE
GATBPS_DISTFILES_68: $(GATBPS_DISTFILES_68)
GATBPS_DISTFILES_68: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_68); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_68 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_68 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_68

GATBPS_DISTFILES_69: FORCE
GATBPS_DISTFILES_69: $(GATBPS_DISTFILES_69)
GATBPS_DISTFILES_69: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_69); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_69 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_69 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_69

GATBPS_DISTFILES_70: FORCE
GATBPS_DISTFILES_70: $(GATBPS_DISTFILES_70)
GATBPS_DISTFILES_70: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_70); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_70 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_70 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_70

GATBPS_DISTFILES_71: FORCE
GATBPS_DISTFILES_71: $(GATBPS_DISTFILES_71)
GATBPS_DISTFILES_71: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_71); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_71 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_71 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_71

GATBPS_DISTFILES_72: FORCE
GATBPS_DISTFILES_72: $(GATBPS_DISTFILES_72)
GATBPS_DISTFILES_72: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_72); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_72 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_72 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_72

GATBPS_DISTFILES_73: FORCE
GATBPS_DISTFILES_73: $(GATBPS_DISTFILES_73)
GATBPS_DISTFILES_73: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_73); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_73 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_73 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_73

GATBPS_DISTFILES_74: FORCE
GATBPS_DISTFILES_74: $(GATBPS_DISTFILES_74)
GATBPS_DISTFILES_74: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_74); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_74 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_74 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_74

GATBPS_DISTFILES_75: FORCE
GATBPS_DISTFILES_75: $(GATBPS_DISTFILES_75)
GATBPS_DISTFILES_75: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_75); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_75 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_75 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_75

GATBPS_DISTFILES_76: FORCE
GATBPS_DISTFILES_76: $(GATBPS_DISTFILES_76)
GATBPS_DISTFILES_76: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_76); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_76 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_76 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_76

GATBPS_DISTFILES_77: FORCE
GATBPS_DISTFILES_77: $(GATBPS_DISTFILES_77)
GATBPS_DISTFILES_77: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_77); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_77 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_77 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_77

GATBPS_DISTFILES_78: FORCE
GATBPS_DISTFILES_78: $(GATBPS_DISTFILES_78)
GATBPS_DISTFILES_78: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_78); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_78 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_78 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_78

GATBPS_DISTFILES_79: FORCE
GATBPS_DISTFILES_79: $(GATBPS_DISTFILES_79)
GATBPS_DISTFILES_79: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_79); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_79 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_79 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_79

GATBPS_DISTFILES_80: FORCE
GATBPS_DISTFILES_80: $(GATBPS_DISTFILES_80)
GATBPS_DISTFILES_80: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_80); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_80 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_80 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_80

GATBPS_DISTFILES_81: FORCE
GATBPS_DISTFILES_81: $(GATBPS_DISTFILES_81)
GATBPS_DISTFILES_81: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_81); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_81 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_81 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_81

GATBPS_DISTFILES_82: FORCE
GATBPS_DISTFILES_82: $(GATBPS_DISTFILES_82)
GATBPS_DISTFILES_82: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_82); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_82 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_82 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_82

GATBPS_DISTFILES_83: FORCE
GATBPS_DISTFILES_83: $(GATBPS_DISTFILES_83)
GATBPS_DISTFILES_83: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_83); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_83 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_83 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_83

GATBPS_DISTFILES_84: FORCE
GATBPS_DISTFILES_84: $(GATBPS_DISTFILES_84)
GATBPS_DISTFILES_84: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_84); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_84 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_84 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_84

GATBPS_DISTFILES_85: FORCE
GATBPS_DISTFILES_85: $(GATBPS_DISTFILES_85)
GATBPS_DISTFILES_85: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_85); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_85 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_85 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_85

GATBPS_DISTFILES_86: FORCE
GATBPS_DISTFILES_86: $(GATBPS_DISTFILES_86)
GATBPS_DISTFILES_86: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_86); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_86 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_86 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_86

GATBPS_DISTFILES_87: FORCE
GATBPS_DISTFILES_87: $(GATBPS_DISTFILES_87)
GATBPS_DISTFILES_87: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_87); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_87 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_87 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_87

GATBPS_DISTFILES_88: FORCE
GATBPS_DISTFILES_88: $(GATBPS_DISTFILES_88)
GATBPS_DISTFILES_88: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_88); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_88 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_88 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_88

GATBPS_DISTFILES_89: FORCE
GATBPS_DISTFILES_89: $(GATBPS_DISTFILES_89)
GATBPS_DISTFILES_89: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_89); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_89 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_89 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_89

GATBPS_DISTFILES_90: FORCE
GATBPS_DISTFILES_90: $(GATBPS_DISTFILES_90)
GATBPS_DISTFILES_90: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_90); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_90 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_90 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_90

GATBPS_DISTFILES_91: FORCE
GATBPS_DISTFILES_91: $(GATBPS_DISTFILES_91)
GATBPS_DISTFILES_91: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_91); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_91 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_91 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_91

GATBPS_DISTFILES_92: FORCE
GATBPS_DISTFILES_92: $(GATBPS_DISTFILES_92)
GATBPS_DISTFILES_92: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_92); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_92 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_92 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_92

GATBPS_DISTFILES_93: FORCE
GATBPS_DISTFILES_93: $(GATBPS_DISTFILES_93)
GATBPS_DISTFILES_93: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_93); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_93 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_93 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_93

GATBPS_DISTFILES_94: FORCE
GATBPS_DISTFILES_94: $(GATBPS_DISTFILES_94)
GATBPS_DISTFILES_94: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_94); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_94 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_94 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_94

GATBPS_DISTFILES_95: FORCE
GATBPS_DISTFILES_95: $(GATBPS_DISTFILES_95)
GATBPS_DISTFILES_95: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_95); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_95 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_95 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_95

GATBPS_DISTFILES_96: FORCE
GATBPS_DISTFILES_96: $(GATBPS_DISTFILES_96)
GATBPS_DISTFILES_96: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_96); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_96 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_96 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_96

GATBPS_DISTFILES_97: FORCE
GATBPS_DISTFILES_97: $(GATBPS_DISTFILES_97)
GATBPS_DISTFILES_97: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_97); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_97 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_97 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_97

GATBPS_DISTFILES_98: FORCE
GATBPS_DISTFILES_98: $(GATBPS_DISTFILES_98)
GATBPS_DISTFILES_98: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_98); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_98 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_98 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_98

GATBPS_DISTFILES_99: FORCE
GATBPS_DISTFILES_99: $(GATBPS_DISTFILES_99)
GATBPS_DISTFILES_99: GATBPS_DISTFILES_CHMOD
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_FORCE)$(GATBPS_V_NOP)
	$(GATBPS_at)( first_iteration=:; for x in $(GATBPS_DISTFILES_99); do if $$first_iteration; then srcdir='$(srcdir)'; case $$srcdir in [!/]*) srcdir=./$$srcdir; ;; esac; readonly srcdir; distdir='$(distdir)'; case $$distdir in [!/]*) distdir=./$$distdir; ;; esac; readonly distdir; first_iteration=false; readonly first_iteration; fi; if test -r "$$distdir/$$x"; then m='Makefile: GATBPS_DISTFILES_99 ($@): error:'; m=$$m" double walk detected: $$x"; printf '%s\n' "$$m" >&2; exit 1; fi; $(MKDIR_P) "$$distdir/$$x" || exit $$?; rmdir "$$distdir/$$x" || exit $$?; if test -r "$$x"; then d=.; else d=$$srcdir; fi; if test -f "$$d/$$x" || test -d "$$d/$$x"; then if $(AM_V_P); then sq=; for cqDe_w in cp -L -R -p "$$d/$$x" "$$distdir/$$x" ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; cp -L -R -p "$$d/$$x" "$$distdir/$$x" || exit $$?; else m='Makefile: GATBPS_DISTFILES_99 ($@): error:'; m=$$m" path must exist as a file or directory: $$d/$$x"; printf '%s\n' "$$m" >&2; exit 1; fi; done; )
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

GATBPS_DISTFILES: GATBPS_DISTFILES_99

dist-hook: GATBPS_DISTFILES

list-distfiles-DISTFILES: FORCE
	@ for x in $(DISTFILES) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-DISTFILES

list-distfiles-GATBPS_DISTFILES_0: FORCE
	@ for x in $(GATBPS_DISTFILES_0) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_0

list-distfiles-GATBPS_DISTFILES_1: FORCE
	@ for x in $(GATBPS_DISTFILES_1) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_1

list-distfiles-GATBPS_DISTFILES_2: FORCE
	@ for x in $(GATBPS_DISTFILES_2) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_2

list-distfiles-GATBPS_DISTFILES_3: FORCE
	@ for x in $(GATBPS_DISTFILES_3) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_3

list-distfiles-GATBPS_DISTFILES_4: FORCE
	@ for x in $(GATBPS_DISTFILES_4) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_4

list-distfiles-GATBPS_DISTFILES_5: FORCE
	@ for x in $(GATBPS_DISTFILES_5) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_5

list-distfiles-GATBPS_DISTFILES_6: FORCE
	@ for x in $(GATBPS_DISTFILES_6) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_6

list-distfiles-GATBPS_DISTFILES_7: FORCE
	@ for x in $(GATBPS_DISTFILES_7) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_7

list-distfiles-GATBPS_DISTFILES_8: FORCE
	@ for x in $(GATBPS_DISTFILES_8) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_8

list-distfiles-GATBPS_DISTFILES_9: FORCE
	@ for x in $(GATBPS_DISTFILES_9) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_9

list-distfiles-GATBPS_DISTFILES_10: FORCE
	@ for x in $(GATBPS_DISTFILES_10) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_10

list-distfiles-GATBPS_DISTFILES_11: FORCE
	@ for x in $(GATBPS_DISTFILES_11) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_11

list-distfiles-GATBPS_DISTFILES_12: FORCE
	@ for x in $(GATBPS_DISTFILES_12) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_12

list-distfiles-GATBPS_DISTFILES_13: FORCE
	@ for x in $(GATBPS_DISTFILES_13) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_13

list-distfiles-GATBPS_DISTFILES_14: FORCE
	@ for x in $(GATBPS_DISTFILES_14) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_14

list-distfiles-GATBPS_DISTFILES_15: FORCE
	@ for x in $(GATBPS_DISTFILES_15) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_15

list-distfiles-GATBPS_DISTFILES_16: FORCE
	@ for x in $(GATBPS_DISTFILES_16) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_16

list-distfiles-GATBPS_DISTFILES_17: FORCE
	@ for x in $(GATBPS_DISTFILES_17) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_17

list-distfiles-GATBPS_DISTFILES_18: FORCE
	@ for x in $(GATBPS_DISTFILES_18) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_18

list-distfiles-GATBPS_DISTFILES_19: FORCE
	@ for x in $(GATBPS_DISTFILES_19) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_19

list-distfiles-GATBPS_DISTFILES_20: FORCE
	@ for x in $(GATBPS_DISTFILES_20) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_20

list-distfiles-GATBPS_DISTFILES_21: FORCE
	@ for x in $(GATBPS_DISTFILES_21) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_21

list-distfiles-GATBPS_DISTFILES_22: FORCE
	@ for x in $(GATBPS_DISTFILES_22) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_22

list-distfiles-GATBPS_DISTFILES_23: FORCE
	@ for x in $(GATBPS_DISTFILES_23) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_23

list-distfiles-GATBPS_DISTFILES_24: FORCE
	@ for x in $(GATBPS_DISTFILES_24) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_24

list-distfiles-GATBPS_DISTFILES_25: FORCE
	@ for x in $(GATBPS_DISTFILES_25) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_25

list-distfiles-GATBPS_DISTFILES_26: FORCE
	@ for x in $(GATBPS_DISTFILES_26) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_26

list-distfiles-GATBPS_DISTFILES_27: FORCE
	@ for x in $(GATBPS_DISTFILES_27) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_27

list-distfiles-GATBPS_DISTFILES_28: FORCE
	@ for x in $(GATBPS_DISTFILES_28) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_28

list-distfiles-GATBPS_DISTFILES_29: FORCE
	@ for x in $(GATBPS_DISTFILES_29) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_29

list-distfiles-GATBPS_DISTFILES_30: FORCE
	@ for x in $(GATBPS_DISTFILES_30) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_30

list-distfiles-GATBPS_DISTFILES_31: FORCE
	@ for x in $(GATBPS_DISTFILES_31) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_31

list-distfiles-GATBPS_DISTFILES_32: FORCE
	@ for x in $(GATBPS_DISTFILES_32) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_32

list-distfiles-GATBPS_DISTFILES_33: FORCE
	@ for x in $(GATBPS_DISTFILES_33) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_33

list-distfiles-GATBPS_DISTFILES_34: FORCE
	@ for x in $(GATBPS_DISTFILES_34) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_34

list-distfiles-GATBPS_DISTFILES_35: FORCE
	@ for x in $(GATBPS_DISTFILES_35) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_35

list-distfiles-GATBPS_DISTFILES_36: FORCE
	@ for x in $(GATBPS_DISTFILES_36) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_36

list-distfiles-GATBPS_DISTFILES_37: FORCE
	@ for x in $(GATBPS_DISTFILES_37) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_37

list-distfiles-GATBPS_DISTFILES_38: FORCE
	@ for x in $(GATBPS_DISTFILES_38) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_38

list-distfiles-GATBPS_DISTFILES_39: FORCE
	@ for x in $(GATBPS_DISTFILES_39) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_39

list-distfiles-GATBPS_DISTFILES_40: FORCE
	@ for x in $(GATBPS_DISTFILES_40) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_40

list-distfiles-GATBPS_DISTFILES_41: FORCE
	@ for x in $(GATBPS_DISTFILES_41) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_41

list-distfiles-GATBPS_DISTFILES_42: FORCE
	@ for x in $(GATBPS_DISTFILES_42) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_42

list-distfiles-GATBPS_DISTFILES_43: FORCE
	@ for x in $(GATBPS_DISTFILES_43) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_43

list-distfiles-GATBPS_DISTFILES_44: FORCE
	@ for x in $(GATBPS_DISTFILES_44) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_44

list-distfiles-GATBPS_DISTFILES_45: FORCE
	@ for x in $(GATBPS_DISTFILES_45) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_45

list-distfiles-GATBPS_DISTFILES_46: FORCE
	@ for x in $(GATBPS_DISTFILES_46) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_46

list-distfiles-GATBPS_DISTFILES_47: FORCE
	@ for x in $(GATBPS_DISTFILES_47) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_47

list-distfiles-GATBPS_DISTFILES_48: FORCE
	@ for x in $(GATBPS_DISTFILES_48) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_48

list-distfiles-GATBPS_DISTFILES_49: FORCE
	@ for x in $(GATBPS_DISTFILES_49) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_49

list-distfiles-GATBPS_DISTFILES_50: FORCE
	@ for x in $(GATBPS_DISTFILES_50) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_50

list-distfiles-GATBPS_DISTFILES_51: FORCE
	@ for x in $(GATBPS_DISTFILES_51) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_51

list-distfiles-GATBPS_DISTFILES_52: FORCE
	@ for x in $(GATBPS_DISTFILES_52) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_52

list-distfiles-GATBPS_DISTFILES_53: FORCE
	@ for x in $(GATBPS_DISTFILES_53) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_53

list-distfiles-GATBPS_DISTFILES_54: FORCE
	@ for x in $(GATBPS_DISTFILES_54) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_54

list-distfiles-GATBPS_DISTFILES_55: FORCE
	@ for x in $(GATBPS_DISTFILES_55) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_55

list-distfiles-GATBPS_DISTFILES_56: FORCE
	@ for x in $(GATBPS_DISTFILES_56) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_56

list-distfiles-GATBPS_DISTFILES_57: FORCE
	@ for x in $(GATBPS_DISTFILES_57) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_57

list-distfiles-GATBPS_DISTFILES_58: FORCE
	@ for x in $(GATBPS_DISTFILES_58) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_58

list-distfiles-GATBPS_DISTFILES_59: FORCE
	@ for x in $(GATBPS_DISTFILES_59) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_59

list-distfiles-GATBPS_DISTFILES_60: FORCE
	@ for x in $(GATBPS_DISTFILES_60) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_60

list-distfiles-GATBPS_DISTFILES_61: FORCE
	@ for x in $(GATBPS_DISTFILES_61) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_61

list-distfiles-GATBPS_DISTFILES_62: FORCE
	@ for x in $(GATBPS_DISTFILES_62) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_62

list-distfiles-GATBPS_DISTFILES_63: FORCE
	@ for x in $(GATBPS_DISTFILES_63) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_63

list-distfiles-GATBPS_DISTFILES_64: FORCE
	@ for x in $(GATBPS_DISTFILES_64) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_64

list-distfiles-GATBPS_DISTFILES_65: FORCE
	@ for x in $(GATBPS_DISTFILES_65) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_65

list-distfiles-GATBPS_DISTFILES_66: FORCE
	@ for x in $(GATBPS_DISTFILES_66) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_66

list-distfiles-GATBPS_DISTFILES_67: FORCE
	@ for x in $(GATBPS_DISTFILES_67) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_67

list-distfiles-GATBPS_DISTFILES_68: FORCE
	@ for x in $(GATBPS_DISTFILES_68) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_68

list-distfiles-GATBPS_DISTFILES_69: FORCE
	@ for x in $(GATBPS_DISTFILES_69) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_69

list-distfiles-GATBPS_DISTFILES_70: FORCE
	@ for x in $(GATBPS_DISTFILES_70) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_70

list-distfiles-GATBPS_DISTFILES_71: FORCE
	@ for x in $(GATBPS_DISTFILES_71) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_71

list-distfiles-GATBPS_DISTFILES_72: FORCE
	@ for x in $(GATBPS_DISTFILES_72) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_72

list-distfiles-GATBPS_DISTFILES_73: FORCE
	@ for x in $(GATBPS_DISTFILES_73) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_73

list-distfiles-GATBPS_DISTFILES_74: FORCE
	@ for x in $(GATBPS_DISTFILES_74) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_74

list-distfiles-GATBPS_DISTFILES_75: FORCE
	@ for x in $(GATBPS_DISTFILES_75) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_75

list-distfiles-GATBPS_DISTFILES_76: FORCE
	@ for x in $(GATBPS_DISTFILES_76) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_76

list-distfiles-GATBPS_DISTFILES_77: FORCE
	@ for x in $(GATBPS_DISTFILES_77) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_77

list-distfiles-GATBPS_DISTFILES_78: FORCE
	@ for x in $(GATBPS_DISTFILES_78) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_78

list-distfiles-GATBPS_DISTFILES_79: FORCE
	@ for x in $(GATBPS_DISTFILES_79) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_79

list-distfiles-GATBPS_DISTFILES_80: FORCE
	@ for x in $(GATBPS_DISTFILES_80) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_80

list-distfiles-GATBPS_DISTFILES_81: FORCE
	@ for x in $(GATBPS_DISTFILES_81) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_81

list-distfiles-GATBPS_DISTFILES_82: FORCE
	@ for x in $(GATBPS_DISTFILES_82) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_82

list-distfiles-GATBPS_DISTFILES_83: FORCE
	@ for x in $(GATBPS_DISTFILES_83) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_83

list-distfiles-GATBPS_DISTFILES_84: FORCE
	@ for x in $(GATBPS_DISTFILES_84) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_84

list-distfiles-GATBPS_DISTFILES_85: FORCE
	@ for x in $(GATBPS_DISTFILES_85) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_85

list-distfiles-GATBPS_DISTFILES_86: FORCE
	@ for x in $(GATBPS_DISTFILES_86) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_86

list-distfiles-GATBPS_DISTFILES_87: FORCE
	@ for x in $(GATBPS_DISTFILES_87) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_87

list-distfiles-GATBPS_DISTFILES_88: FORCE
	@ for x in $(GATBPS_DISTFILES_88) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_88

list-distfiles-GATBPS_DISTFILES_89: FORCE
	@ for x in $(GATBPS_DISTFILES_89) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_89

list-distfiles-GATBPS_DISTFILES_90: FORCE
	@ for x in $(GATBPS_DISTFILES_90) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_90

list-distfiles-GATBPS_DISTFILES_91: FORCE
	@ for x in $(GATBPS_DISTFILES_91) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_91

list-distfiles-GATBPS_DISTFILES_92: FORCE
	@ for x in $(GATBPS_DISTFILES_92) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_92

list-distfiles-GATBPS_DISTFILES_93: FORCE
	@ for x in $(GATBPS_DISTFILES_93) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_93

list-distfiles-GATBPS_DISTFILES_94: FORCE
	@ for x in $(GATBPS_DISTFILES_94) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_94

list-distfiles-GATBPS_DISTFILES_95: FORCE
	@ for x in $(GATBPS_DISTFILES_95) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_95

list-distfiles-GATBPS_DISTFILES_96: FORCE
	@ for x in $(GATBPS_DISTFILES_96) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_96

list-distfiles-GATBPS_DISTFILES_97: FORCE
	@ for x in $(GATBPS_DISTFILES_97) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_97

list-distfiles-GATBPS_DISTFILES_98: FORCE
	@ for x in $(GATBPS_DISTFILES_98) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_98

list-distfiles-GATBPS_DISTFILES_99: FORCE
	@ for x in $(GATBPS_DISTFILES_99) $${empty+}; do x='$(LIST_DISTFILES_PREFIX)'$$x; printf '%s\n' "$$x" || exit $$?; done;
list-distfiles: list-distfiles-GATBPS_DISTFILES_99

list-distfiles: FORCE
	@ for x in $(DIST_SUBDIRS) $${empty+}; do v=LIST_DISTFILES_PREFIX='$(LIST_DISTFILES_PREFIX)'$$x/; ( cd "./$$x" || exit $$?; $(MAKE) $(AM_MAKEFLAGS) -s "$$v" $@ || exit $$?; ) || exit $$?; done;

#-----------------------------------------------------------------------

$(distdir).shar.gz: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-shar
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.Z: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-tarZ
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.bz2: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-bzip2
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.gz: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-gzip
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.lz: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-lzip
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).tar.xz: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-xz
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(distdir).zip: $(GATBPS_DISTFILES)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_MAKE)$(MAKE) $(AM_MAKEFLAGS) dist-zip
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.html:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b html -o $@$(TSUF).html -r asciidoctor-diagram $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).html $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.1:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).1 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).1 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.2:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).2 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).2 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.3:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).3 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).3 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.4:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).4 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).4 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.5:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).5 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).5 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.6:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).6 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).6 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.7:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).7 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).7 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.8:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).8 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).8 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.9:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_ASCIIDOCTOR)$(GATBPS_V_NOP)
	$(AM_V_at)$(ASCIIDOCTOR) -b manpage -o $@$(TSUF).9 $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_FLAGS) $(ASCIIDOCTOR_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF).9 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.adoc.pdf:
	$(GATBPS_V_ASCIIDOCTOR_PDF)$(ASCIIDOCTOR_PDF) -o $@$(TSUF) $(GATBPS_COMMON_ASCIIDOCTOR_FLAGS) $(AM_ASCIIDOCTOR_PDF_FLAGS) $(ASCIIDOCTOR_PDF_FLAGS) $<
	$(AM_V_at)mv -f $@$(TSUF) $@

GATBPS_GEN_VERSION_CACHE_FILES/dummy $(GATBPS_GEN_VERSION_CACHE_FILES):
	$(AM_V_GEN)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_at)x='$@'; r='^\(.*\)\..*$$'; x=`expr "$$x" : "$$r"` || exit $$?; sh - '$(srcdir)'/"$$x" >$@$(TSUF) || exit $$?;
	$(AM_V_at)mv -f $@$(TSUF) $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

$(java_dst)$(GATBPS_OUTER_JAR_SUFFIX) java.dummy_1.main: java.FORCE
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at){ \
  ( \
    x=$(java_sourcepath); \
    x=$${x}$(CLASSPATH_SEPARATOR); \
    x=$${x}$(srcdir)/$(java_sourcepath); \
    case ""$(CLASSPATH) in \
      ?*) \
        x="$${x}"$(CLASSPATH_SEPARATOR)$(CLASSPATH); \
      ;; \
    esac; \
    case ''$(java_CLASSPATH) in \
      ?*) \
        x="$${x}"$(CLASSPATH_SEPARATOR)$(java_CLASSPATH); \
      ;; \
    esac; \
    $(SHELL) \
      '-' \
      $(srcdir)/build-aux/gatbps-echo.sh -q \
      '--' \
      "$${x}" \
      1>'java-main.tmp' \
    || 'exit' "$${?}"; \
    classpath=` \
      'cat' 'java-main.tmp' \
    ` || 'exit' "$${?}"; \
    x='x'; \
    for if_not_blank in \
      $(java_JAVACFLAGS) \
      $${prevent_an_empty_word_list} \
    ; do \
      $(SHELL) \
        '-' \
        $(srcdir)/build-aux/gatbps-echo.sh -q \
        '--' \
        $(java_JAVACFLAGS) \
        1>'java-main.tmp' \
      || 'exit' "$${?}"; \
      x=''; \
      'break'; \
    done; \
    case "$${x}" in \
      ?*) \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          $(GATBPS_JAVACFLAGS) \
          1>'java-main.tmp' \
        || 'exit' "$${?}"; \
      ;; \
    esac; \
    javacflags=` \
      'cat' 'java-main.tmp' \
    ` || 'exit' "$${?}"; \
    $(MAKE) \
      $(AM_MAKEFLAGS) \
      GATBPS_INNER_CLASSPATH="$${classpath}" \
      GATBPS_INNER_JAR_SUFFIX= \
      GATBPS_INNER_JAVACFLAGS="$${javacflags}" \
      GATBPS_INNER_PACKAGE=$(java_package) \
      GATBPS_INNER_SOURCEPATH=$(java_sourcepath) \
      GATBPS_OUTER_JAR_SUFFIX=/outer \
      './'$(java_dst) \
    || 'exit' "$${?}"; \
    'exit' '0'; \
  :;); \
  x="$${?}"; \
  'rm' \
    '-f' \
    'java-main.tmp' \
  ; \
  'exit' "$${x}"; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

./$(java_dst)$(GATBPS_INNER_JAR_SUFFIX): $(java_dep)
./$(java_dst)$(GATBPS_INNER_JAR_SUFFIX): $(java_extra)
./$(java_dst)$(GATBPS_INNER_JAR_SUFFIX): $(javadoc_src)
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_JAR)$(GATBPS_V_NOP)
	$(AM_V_at){ \
  ( \
\
    srcdir='$(srcdir)'; \
    case $$srcdir in \
      [!/]*) \
        srcdir=./$$srcdir; \
      ;; \
    esac; \
    readonly srcdir; \
\
    case '$(PARALLEL_JAVAC)' in \
      ?*) parallel=: ;; \
      "") parallel=false ;; \
    esac; \
    readonly parallel; \
\
    class_files='$(java_src)'; \
    readonly class_files; \
\
    if $$parallel; then \
      :; \
    else \
      for a in $$class_files; do \
        a=./$$a; \
        if test -f "$$a"; then \
          b=$${a%.class}.java; \
          if test -f "$$b"; then \
            c=`find "$$b" -newer "$$a"` || exit $$?; \
          elif test -f "$$srcdir/$$b"; then \
            c=`find "$$srcdir/$$b" -newer "$$a"` || exit $$?; \
          else \
            c=x; \
          fi; \
          case $$c in ?*) rm -f "$$a.d" || exit $$? ;; esac; \
        fi; \
      done; \
    fi; \
\
    'rm' \
      '-f' \
      '-r' \
      './'$(java_dst)'.tmp' \
    || 'exit' "$${?}"; \
    $(MKDIR_P) \
      './'$(java_dst)'.tmp/x' \
    || 'exit' "$${?}"; \
    c='cf'; \
 \
    : \
    : Compile the .class files in conservatively sized groups. This \
    : prevents us from exceeding any command line length limits and \
    : still lets make -j do some parallelization. \
    ; \
 \
    case '$(PARALLEL_JAVAC)' in \
      ?*) \
        max=50; \
      ;; \
      '') \
        max=1; \
      ;; \
    esac; \
    xs=; \
    n=0; \
    for x in $$class_files; do \
      xs="$$xs $$x"; \
      n=`expr $$n + 1` || exit $$?; \
      case $$n in \
        $$max) \
          $(MAKE) $(AM_MAKEFLAGS) $$xs || exit $$?; \
          xs=; \
          n=0; \
        ;; \
      esac; \
    done; \
    case $$n in \
      0) \
      ;; \
      *) \
        $(MAKE) $(AM_MAKEFLAGS) $$xs || exit $$?; \
      ;; \
    esac; \
 \
    for x in \
      $(java_extra) \
      $(java_nested) \
      $(java_src) \
    ; do \
      case "$${x}" in \
        *'*'*) \
          continue; \
        ;; \
      esac; \
      if 'test' '-f' "$${x}"; then \
        d='.'; \
      else \
        d=$(srcdir); \
        case "$${d}" in \
          '/'*) \
          ;; \
          *) \
            d='./'"$${d}"; \
          ;; \
        esac; \
      fi; \
      $(JAR) \
        "$${c}" \
        './'$(java_dst)'.tmp/x.jar' \
        '-C' \
        "$${d}" \
        './'"$${x}" \
      || 'exit' "$${?}"; \
      c='uf'; \
    done; \
    ( \
      'cd' \
        './'$(java_dst)'.tmp/x' \
      || 'exit' "$${?}"; \
      $(JAR) \
        'xf' \
        '../x.jar' \
      || 'exit' "$${?}"; \
      'exit' '0'; \
    :;) || 'exit' "$${?}"; \
    x='x'; \
    for if_not_blank in \
      $(java_JARFLAGS) \
      $${prevent_an_empty_word_list} \
    ; do \
      $(JAR) \
        'cf' \
        './'$(java_dst) \
        '-C' \
        './'$(java_dst)'.tmp/x/'$(GATBPS_INNER_SOURCEPATH) \
        $(java_JARFLAGS) \
        $(JARFLAGS) \
        '.' \
      || 'exit' "$${?}"; \
      x=''; \
      'break'; \
    done; \
    case "$${x}" in \
      ?*) \
        $(JAR) \
          'cf' \
          './'$(java_dst) \
          '-C' \
          './'$(java_dst)'.tmp/x/'$(GATBPS_INNER_SOURCEPATH) \
          $(GATBPS_JARFLAGS) \
          $(JARFLAGS) \
          '.' \
        || 'exit' "$${?}"; \
      ;; \
    esac; \
    'exit' '0'; \
  :;); \
  x="$${?}"; \
  'rm' \
    '-f' \
    '-r' \
    './'$(java_dst)'.tmp' \
  ; \
  'exit' "$${x}"; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

.PHONY: clean-java
.PHONY: clean-java-main
.PHONY: install-java
.PHONY: install-java-main
.PHONY: java
.PHONY: java-main
.PHONY: java.FORCE
.PHONY: uninstall-java
.PHONY: uninstall-java-main

.java.class:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_at)( case $(GATBPS_INNER_CLASSPATH) in '') printf '%s\n' 'Makefile: .java.class ($@): error: this rule cannot be called directly' >&2; exit 1; ;; esac; )
	$(GATBPS_V_JAVAC)$(GATBPS_V_NOP)
	$(GATBPS_at)test -f $@ || rm -f -r $@
	$(GATBPS_at)test -f $@.d || rm -f -r $@.d
	$(GATBPS_at)rm -f -r $@$(TSUF)*
	$(GATBPS_at)$(MKDIR_P) $(@D)
	$(GATBPS_at)( srcdir='$(srcdir)'; readonly srcdir; run_javac=:; flags='-Xprefer:source -implicit:none'; case '$(PARALLEL_JAVAC)' in '') if test -r $@ && test ! -r $@.d; then x=`find $@ -newer $<` || exit $$?; case $$x in ?*) run_javac=false; esac; fi; flags=; esac; readonly run_javac; readonly flags; if $$run_javac; then cp=$(GATBPS_INNER_CLASSPATH); sp=$(GATBPS_INNER_SOURCEPATH); sp=$$sp$(CLASSPATH_SEPARATOR); sp=$$sp$$srcdir/$(GATBPS_INNER_SOURCEPATH); case $(CLASSPATH_SEPARATOR) in ';') for v in cp sp; do eval xs=\$$$$v; ys=; IFS=';'; for x in $$xs; do case $$x in '') continue; ;; [!./]*) x=./$$x; esac; case $$x in *'*') IFS=*; for x in $$x; do :; done; a=*; ;; *) a=; esac; x=`cygpath -w -l "$$x"`$$a || exit $$?; case $$ys in ?*) ys=$$ys$(CLASSPATH_SEPARATOR); esac; ys=$$ys$$x; done; unset IFS; eval $$v=\$$ys; done; esac; readonly cp; readonly sp; if $(AM_V_P); then sq=; for cqDe_w in $(JAVAC) -cp "$$cp" -d $(GATBPS_INNER_SOURCEPATH) -sourcepath "$$sp" $$flags $(GATBPS_INNER_JAVACFLAGS) $(JAVACFLAGS) $< ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq in ?*) sq=$$sq' '; esac; sq=$$sq$$cqDe_w; done; printf '%s\n' "$$sq" || exit $$?; fi; $(JAVAC) -cp "$$cp" -d $(GATBPS_INNER_SOURCEPATH) -sourcepath "$$sp" $$flags $(GATBPS_INNER_JAVACFLAGS) $(JAVACFLAGS) $< || exit $$?; fi; case '$(HAVE_JDEPS)' in 1) if $(AM_V_P); then sq1=; for cqDe_w in $(JDEPS) -cp $@$(TSUF).nonexistent -v $@ ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq1 in ?*) sq1=$$sq1' '; esac; sq1=$$sq1$$cqDe_w; done; sq2=; for cqDe_w in $@$(TSUF)2 ; do case $$cqDe_w in *[!+./0-9:=A-Z_a-z-]*) case $$cqDe_w in *\'*) cqDe_x1='s/'\''/&\\&&/g'; cqDe_x2='1s/^/'\''/'; cqDe_x3='$$s/$$/'\''/'; cqDe_x=`printf '%s\n' "$$cqDe_x1" "$$cqDe_x2" "$$cqDe_x3"` || exit $$?; cqDe_y1='`sed "$$cqDe_x" <<EOF'; cqDe_y2='$$cqDe_w'; cqDe_y3='EOF'; cqDe_y4='`'; cqDe_y=`printf '%s\n' "$$cqDe_y1" "$$cqDe_y2" "$$cqDe_y3" "$$cqDe_y4"` || exit $$?; eval "cqDe_w=$$cqDe_y" || exit $$?; ;; *) cqDe_w="'$$cqDe_w'"; esac; esac; case $$sq2 in ?*) sq2=$$sq2' '; esac; sq2=$$sq2$$cqDe_w; done; printf '%s\n' "$$sq1 >$$sq2" || exit $$?; fi; $(JDEPS) -cp $@$(TSUF).nonexistent -v $@ >$@$(TSUF)2 || exit $$?; $(AWK) ' BEGIN { r = "$(GATBPS_INNER_PACKAGE)"; gsub(/\./, "\\.", r); r = r "\\..*"; } { if ($$1 ~ r && $$3 ~ r) { x = $$3; sub(/\$$.*/, "", x); gsub(/\./, "/", x); x = "$(GATBPS_INNER_SOURCEPATH)/" x ".java"; if (!seen[x]) { print "$@: " x; seen[x] = 1; } } } ' <$@$(TSUF)2 >$@$(TSUF)3 || exit $$?; rm -f $@$(TSUF)2; ;; 0) >$@$(TSUF)3 || exit $$?; ;; *) printf '%s\n' 'Makefile: .java.class ($@): error: invalid HAVE_JDEPS value: $(HAVE_JDEPS)' >&2; exit 1; ;; esac; touch $@ || exit $$?; mv -f $@$(TSUF)3 $@.d || exit $$?; ) || { s=$$?; rm -f -r $@ $@.d; exit $$s; }
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

clean-java: clean-java-main
clean-java: java.FORCE

clean-java-main: java.FORCE
	-{ \
  for x in \
    $(java_dst) \
    $(java_nested) \
    $(java_src) \
  ; do \
    'rm' \
      '-f' \
      './'"$${x}" \
    ; \
  done; \
  'exit' '0'; \
:;}

clean-local: clean-java

install-java: install-java-main
install-java: java.FORCE

install-java-main: java-main
install-java-main: java.FORCE
	$(GATBPS_at)$(NORMAL_INSTALL)
	$(AM_V_at){ \
  x='x'; \
  for y in $(java_noinst); do \
    x=''; \
    'break'; \
  done; \
  case "$${x}" in \
    ?*) \
      d=$(DESTDIR)$(javadir); \
      case "$${d}" in \
        '/'*) \
        ;; \
        *) \
          d='./'"$${d}"; \
        ;; \
      esac; \
      if $(AM_V_P); then \
        ':'; \
      else \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          $(MKDIR_P) \
          "$${d}" \
        ; \
      fi; \
      $(MKDIR_P) \
        "$${d}" \
      || 'exit' "$${?}"; \
      if 'test' '-f' $(java_dst); then \
        x='.'; \
      else \
        x=$(srcdir); \
        case "$${x}" in \
          '/'*) \
          ;; \
          *) \
            x='./'"$${x}"; \
          ;; \
        esac; \
      fi; \
      x="$${x}"'/'$(java_dst); \
      if $(AM_V_P); then \
        ':'; \
      else \
        $(SHELL) \
          '-' \
          $(srcdir)/build-aux/gatbps-echo.sh -q \
          '--' \
          $(INSTALL_DATA) \
          "$${x}" \
          "$${d}" \
        ; \
      fi; \
      $(INSTALL_DATA) \
        "$${x}" \
        "$${d}" \
      || 'exit' "$${?}"; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

java: java-main
java: java.FORCE

java-main: $(java_dst)
java-main: java.FORCE

java.FORCE:

uninstall-java: java.FORCE
uninstall-java: uninstall-java-main

uninstall-java-main: java.FORCE
	$(GATBPS_at)$(NORMAL_UNINSTALL)
	$(AM_V_at){ \
  x='x'; \
  for y in $(java_noinst); do \
    x=''; \
    'break'; \
  done; \
  case "$${x}" in \
    ?*) \
      ( \
        x=$(java_dst); \
        x=$${x##*/}; \
        x=$(DESTDIR)$(javadir)'/'"$${x}"; \
        case "$${x}" in \
          '/'*) \
          ;; \
          *) \
            x='./'"$${x}"; \
          ;; \
        esac; \
        if $(AM_V_P); then \
          ':'; \
        else \
          $(SHELL) \
            '-' \
            $(srcdir)/build-aux/gatbps-echo.sh -q \
            '--' \
            'rm' \
            '-f' \
            "$${x}" \
          ; \
        fi; \
        'rm' \
          '-f' \
          "$${x}" \
        ; \
        'exit' '0'; \
      :;); \
      x="$${?}"; \
      'rm' \
        '-f' \
        'uninstall-java-main.tmp' \
      ; \
      'exit' "$${x}"; \
    ;; \
  esac; \
  'exit' '0'; \
:;}

.m4.m4out:
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_TOP)
	$(GATBPS_V_M4)$(GATBPS_V_NOP)
	$(AM_V_at)rm -f -r $@ $@$(TSUF)*
	$(AM_V_at)rm -f -r $@.d
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_at)printf '%s: %s\n' $@ $< >$@$(TSUF)1
	$(AM_V_at)$(M4) $(GATBPS_M4FLAGS) $(M4FLAGS) -D make_rules -D make_target=$@ $< >>$@$(TSUF)1
	$(AM_V_at)$(M4) $(GATBPS_M4FLAGS) $(M4FLAGS) -D make_target=$@ $< >$@$(TSUF)2
	$(AM_V_at)mv -f $@$(TSUF)1 $@.d
	$(AM_V_at)mv -f $@$(TSUF)2 $@
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

@GATBPS_DOCKER_BUILD_RULES@
@GATBPS_JAVA_CLASS_RULES@
@GATBPS_JAVA_RULES@
@GATBPS_M4_RULES@
@GATBPS_TAR_RULES@
@GATBPS_XZ_RULES@

$(top_targets) top_targets_dummy:
	$(AM_V_at)'cd' '..' && { \
  $(MAKE) \
    $(AM_MAKEFLAGS) \
    $@ \
  ; \
}

.PRECIOUS: $(top_targets)

include/src/sst_status_map.inc: bin/sst_status_map_generator$(EXEEXT)
include/src/sst_status_map.inc: include/src/sst_status_map.inc.ac
include/src/sst_status_map.inc: include/src/sst_status_map.inc.am

all-local: include/src/sst_status_map.inc

include/src/sst_status_map.inc: ../include/src/sst_status_map.inc.ac
include/src/sst_status_map.inc: ../include/src/sst_status_map.inc.am
	$(AM_V_GEN)$(GATBPS_RECIPE_MARKER_TOP)
	$(AM_V_at)'rm' \
  '-f' \
  'include/src/sst_status_map.inc' \
  'include/src/sst_status_map.inc.tmp' \
;
	$(AM_V_at)$(MKDIR_P) \
  'include/src' \
;
	$(AM_V_at){ \
  ( \
    generator='bin/sst_status_map_generator'$(EXEEXT); \
    $(GATBPS_VPATH_SEARCH_TOP) \
      "$${generator}" \
    $(GATBPS_VPATH_SEARCH_BOT); \
    d=$(GATBPS_VPATH_SEARCH_RESULT); \
    generator="$${d}"'/'"$${generator}"; \
    'readonly' 'generator'; \
    "$${generator}" \
      1>'include/src/sst_status_map.inc.tmp' \
    || 'exit' "$${?}"; \
    'mv' \
      'include/src/sst_status_map.inc.tmp' \
      'include/src/sst_status_map.inc' \
    || 'exit' "$${?}"; \
    'exit' '0'; \
  :;); \
  s="$${?}"; \
  'readonly' 's'; \
  case "$${s}" in \
    '0') \
    ;; \
    *) \
      'rm' \
        '-f' \
        'include/src/sst_status_map.inc' \
        'include/src/sst_status_map.inc.tmp' \
      ; \
    ;; \
  esac; \
  'exit' "$${s}"; \
:;}
	$(AM_V_at)$(GATBPS_RECIPE_MARKER_BOT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
